<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Installation_Guide.ent">
%BOOK_ENTITIES;
]>

<chapter id="chap-kickstart-installations">
	<title>Kickstart Installations</title>


	<indexterm>
		<primary>installation</primary>
		<secondary>Kickstart</secondary>
		<see>Kickstart installations</see>
	</indexterm>
	<indexterm>
		<primary>Kickstart installations</primary>
	</indexterm>


	<section id="sect-kickstart-introduction">
		<title>What are Kickstart Installations?</title>


		<indexterm>
			<primary>log files</primary>
			<secondary>Kickstart installations</secondary>
		</indexterm>


		<para>
			Kickstart installations offer a means to automate the installation process, either partially or fully. Kickstart files contain answers to all questions normally asked by the installation program, such as what time zone you want the system to use, how the drives should be partitioned, or which packages should be installed. Providing a prepared Kickstart file when the installation begins therefore allows you to perform the installation automatically, without need for any intervention from the user. This is especially useful when deploying &PRODUCT; on a large number of systems at once.
		</para>
		<para>
			Kickstart files can be kept on a single server system and read by individual computers during the installation. This installation method can support the use of a single Kickstart file to install &PRODUCT; on multiple machines, making it ideal for network and system administrators.
		</para>
		<para>
			All Kickstart scripts and the log files of their execution are stored in the <filename>/tmp</filename> directory to assist with debugging installation failures.
		</para>
		<note>
			<para>
				In previous versions of &PRODUCT;, Kickstart allowed for upgrading the system as well. In &PRODUCT;&nbsp;7, this functionality has been removed and system upgrades are instead handled by specialized tools. See <xref linkend="chap-upgrading-your-current-system"/> for details.
			</para>
		</note>
	</section>

	<section id="sect-kickstart-howto">
		<title>How Do You Perform a Kickstart Installation?</title>
		<para>
			Kickstart installations can be performed using a local DVD, a local hard drive, NFS, FTP, HTTP, or HTTPS.
		</para>
		<para>
			To use Kickstart, you must:
		</para>
		<orderedlist>
			<listitem>
				<para>
					Create a Kickstart file.
				</para>
			</listitem>
			<listitem>
				<para>
					Make the Kickstart file available on removable media, a hard drive or a network location.
				</para>
			</listitem>
			<listitem>
				<para>
					Create boot media, which will be used to begin the installation.
				</para>
			</listitem>

			<listitem>
				<para>
					Make the installation source available.
				</para>
			</listitem>

			<listitem>
				<para>
					Start the Kickstart installation.
				</para>
			</listitem>
		</orderedlist>
		<para>
			This chapter explains these steps in detail.
		</para>

		<section id="sect-kickstart-file-create">
			<title>Creating a Kickstart File</title>


			<indexterm>
				<primary>Kickstart installations</primary>
				<secondary>file format</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart file</primary>
				<secondary>format of</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart file</primary>
				<secondary>what it looks like</secondary>
			</indexterm>


			<para>
				The Kickstart file itself is a plain text file, containing keywords listed in <xref linkend="sect-kickstart-syntax"/>, which serve as directions for the installation. Any text editor able to save files as ASCII text, such as <application>Gedit</application> or <application>vim</application> on Linux systems or <application>Notepad</application> on Windows systems, can be used to create and edit Kickstart files. The file name of your Kickstart configuration does not matter; however, it is recommended to use a simple name as you will need to specify this name later in other configuration files or dialogs.
			</para>
			<para>
				The recommended approach to creating Kickstart files is to perform a manual installation on one system first. After the installation completes, all choices made during the installation are saved into a file named <filename>anaconda-ks.cfg</filename>, located in the <filename class="directory">/root/</filename> directory on the installed system. You can then copy this file, make any changes you need, and use the resulting configuration file in further installations.
			</para>
			<important>
				<para>
					If you have a Red&nbsp;Hat Customer&nbsp;Portal account, you can use the <application>Kickstart Configuration Tool</application> available at <ulink url="https://access.redhat.com/labs/kickstartconfig/"/> in the Customer Portal Labs. This tool will walk you through basic configuration and allows you to download the resulting Kickstart file. However, the tool currently does not supported any advanced partitioning.
				</para>
				<para>
					<application>Kickstart Configurator</application>, the graphical tool for creating Kickstart files, is still available. However, it is no longer being updated and it does not reflect changes in Kickstart syntax between Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;6 and 7.
				</para>
			</important>
			<para>
				When creating a Kickstart file, keep in mind the following:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						Sections must be specified <emphasis>in order</emphasis>. Items within the sections do not have to be in a specific order unless otherwise specified. The section order is:
					</para>
					<itemizedlist>
						<listitem>
							<para>
								Command section - See <xref linkend="sect-kickstart-commands"/> for a list of Kickstart options. You must include the required options.
							</para>
							<para>
								Add-ons for <application>Anaconda</application> which expand the functionality of the installer can also be used in the command section by using the <command>%addon <replaceable>addon_name</replaceable></command> command. See <xref linkend="sect-kickstart-addon"/> for details.
							</para>
						</listitem>
						<listitem>
							<para>
								The <command>%packages</command> section - See <xref linkend="sect-kickstart-packages"/> for details.
							</para>
						</listitem>
						<listitem>
							<para>
								The <command>%pre</command> and <command>%post</command> sections, and the <command>%onerror</command> section - these sections can be in any order and are not required. See <xref linkend="sect-kickstart-preinstall"/>, <xref linkend="sect-kickstart-postinstall"/> and <xref linkend="sect-kickstart-onerror"/> for details.
							</para>
						</listitem>
					</itemizedlist>
					<important>
						<para>
							Sections <command>%addon</command>, <command>%packages</command>, <command>%onerror</command>, <command>%pre</command> and <command>%post</command> must end with <command>%end</command>, otherwise the installation program will refuse the Kickstart file.
						</para>
					</important>
				</listitem>
				<listitem>
					<para>
						Items that are not required can be omitted.
					</para>
				</listitem>
				<listitem>
					<para>
						Omitting any required item results in the installation program prompting the user for an answer to the related item, just as the user would be prompted during a typical installation. Once the answer is given, the installation continues unattended (unless it finds another missing item).
					</para>
				</listitem>
				<listitem>
					<para>
						Lines starting with a pound (also known as number) sign (<literal>#</literal>) are treated as comments and are ignored.
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<section id="sect-kickstart-maintain">
			<title>Maintaining the Kickstart File</title>
			<section id="sect-kickstart-verify">
				<title>Verifying the Kickstart File</title>


				<indexterm significance="normal">
					<primary>kickstart installations</primary>
					<secondary>verification</secondary>
				</indexterm>
				<indexterm significance="normal">
					<primary>kickstart installations</primary>
					<secondary>validation</secondary>
				</indexterm>


				<para>
					When creating or customizing your Kickstart file, it is useful to verify that it is valid before attempting to use it in an installation. &PRODUCT;&nbsp;7 includes the <application>ksvalidator</application> command line utility which can be used to do this. This tool is a part of the <package>pykickstart</package> package. To install this package, execute the following command as <systemitem>root</systemitem>:
				</para>
<screen><prompt>#</prompt> <command>yum install pykickstart</command></screen>
				<para>
					After installing the package, you can validate a Kickstart file using the following command:
				</para>
<screen><prompt>$</prompt> <command>ksvalidator <replaceable>/path/to/kickstart.ks</replaceable></command></screen>
				<para>
					Replace <replaceable>/path/to/kickstart.ks</replaceable> with the path to the Kickstart file you want to verify.
				</para>
				<para>
					For more information about this tool, see the <systemitem>ksvalidator(1)</systemitem> man page.
				</para>
				<important>
					<para>
						Keep in mind that the validation tool has its limitations. The Kickstart file can be very complicated; <application>ksvalidator</application> can make sure the syntax is correct and that the file does not include deprecated options, but it cannot guarantee the installation will be successful. It also does not attempt to validate the <command>%pre</command>, <command>%post</command> and <command>%packages</command> sections of the Kickstart file.
					</para>
				</important>
			</section>


			<section id="sect-kickstart-syntax-changes">
				<title>Changes in Kickstart Syntax</title>


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary>changes in syntax</secondary>
				</indexterm>


				<para>
					While the general principles of Kickstart installations tend to stay the same, the commands and options can change between major releases of &PRODUCT;. You can use the <command>ksverdiff</command> command to display the differences between two versions of the Kickstart syntax. This is useful when updating an existing Kickstart file to be used with a new release. To display a list of changes in syntax between &PRODUCT; 6 and 7, use the following command:
				</para>
<screen><prompt>$</prompt> <command>ksverdiff -f RHEL6 -t RHEL7</command></screen>
				<para>
					The <option>-f</option> option specifies the release to start the comparison with, and the <option>-t</option> option to specify the release to end with. For additional information, see the <systemitem>ksverdiff(1)</systemitem> man page.
				</para>
			</section>



		</section>

		<section id="sect-kickstart-making-available">
			<title>Making the Kickstart File Available</title>


			<indexterm>
				<primary>Kickstart installations</primary>
				<secondary>file locations</secondary>
			</indexterm>


			<para>
				A Kickstart file must be placed in one of the following locations:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						On <emphasis>removable media</emphasis>, such as a DVD or USB flash drive
					</para>
				</listitem>
				<listitem>
					<para>
						On a <emphasis>hard drive</emphasis> connected to the installation system
					</para>
				</listitem>
				<listitem>
					<para>
						On a <emphasis>network share</emphasis> reachable from the installation system
					</para>
				</listitem>
			</itemizedlist>
			<para>
				Normally, a Kickstart file is copied to removable media or a hard drive, or made available on the network. Placing the file in a network location complements the usual approach to Kickstart installations, which is also network-based: the system is booted using a PXE server, the Kickstart file is downloaded from a network share, and software packages specified in the file are downloaded from remote repositories.
			</para>
			<para>
				Making the Kickstart file available and reachable from the installation system is exactly the same as making the installation source available, only with the Kickstart file instead of the installation ISO image or tree. For full procedures, see <xref linkend="sect-making-media-additional-sources"/>.
			</para>
		</section>

		<section id="sect-kickstart-installation-tree">
			<title>Making the Installation Source Available</title>


			<indexterm>
				<primary>Kickstart installations</primary>
				<secondary>installation source</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart installations</primary>
				<secondary>network-based</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart file</primary>
				<secondary>network-based</secondary>
			</indexterm>


			<para>
				The Kickstart installation must access an installation source in order to install the packages needed by your system. The source can be either the full &PRODUCT; installation DVD ISO image, or an <firstterm>installation tree</firstterm>. An installation tree is a copy of the binary &PRODUCT; DVD with the same directory structure.
			</para>
			<para>
				If you are performing a DVD-based installation, insert the &PRODUCT; installation DVD into the computer before starting the Kickstart installation. See <xref linkend="sect-making-media-sources-dvd"/> for information about using a &PRODUCT; DVD as the installation source.
			</para>
			<para>
				If you are performing a hard drive installation (using either a hard drive or an USB flash drive), make sure the ISO images of the binary &PRODUCT; DVD are on a hard drive in the computer. See <xref linkend="sect-making-media-sources-hdd"/> for details about using a hard drive as the installation source.
			</para>
			<para>
				If you are performing a network-based (NFS, FTP or HTTP) installation, you must make the installation tree or the binary DVD ISO image (depending on the protocol used) available over the network. See <xref linkend="sect-making-media-sources-network"/> for details.
			</para>
		</section>

		<section id="sect-kickstart-installation-starting">
			<title>Starting the Kickstart Installation</title>


			<indexterm>
				<primary>Kickstart installations</primary>
				<secondary>starting</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart</primary>
				<secondary>how the file is found</secondary>
			</indexterm>

			<note>
				<para>
					To load your Kickstart file automatically without having to specify the <option>inst.ks=</option> boot option, name the file <filename>ks.cfg</filename> and place it on a storage volume labeled <literal>OEMDRV</literal>.
				</para>
			</note>
			<para>
				To start a Kickstart installation, use the boot option <option>inst.ks=<replaceable>location</replaceable></option> when booting the installation system, replacing <replaceable>location</replaceable> with the location of your Kickstart file. The exact way to specify the boot option depends on your system's architecture - see <xref linkend="chap-anaconda-boot-options"/> for details.
			</para>

			<para>
				AMD64 and Intel&nbsp;64 systems and IBM Power&nbsp;Systems servers have the ability to boot using a PXE server. When you configure the PXE server, you can add the boot option into the boot loader configuration file, which in turn allows you to start the installation automatically. Using this approach, it is possible to automate the installation completely, including the boot process. For information about setting up a PXE server, see <xref linkend="chap-installation-server-setup"/>.
			</para>
			<para>
				Procedures in this section assume that you already have a Kickstart file ready in a location accessible from the installation system, as well as boot media or a PXE server which can be used to boot the system and begin the installation. The procedures are intended as a general reference; some steps differ based on your system's architecture, and not all options are available on all architectures (for example, you cannot use PXE boot on IBM System&nbsp;z).
			</para>

			<section id="sect-kickstart-installation-starting-manual">
				<title>Starting the Kickstart Installation Manually </title>
				<para>
					This section explains how to start a Kickstart installation manually, which means some user interaction (adding boot options at the <prompt>boot:</prompt> prompt) will be required.
				</para>
				<procedure id="proc-kickstart-installation-starting-manual">
					<title>Starting the Kickstart Installation Using a Boot Option </title>
					<step>
						<para>
							Boot the system using either local media (a CD, DVD, or a USB flash drive). For architecture-specific instructions, see:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<xref linkend="chap-booting-installer-x86"/> for AMD64 and Intel&nbsp;64 systems
								</para>
							</listitem>
							<listitem>
								<para>
									<xref linkend="chap-booting-installer-ppc"/> for IBM Power&nbsp;Systems servers
								</para>
							</listitem>
							<listitem>
								<para>
									<xref linkend="chap-installer-booting-ipl-s390"/> for IBM System&nbsp;z
								</para>
							</listitem>
						</itemizedlist>
					</step>
					<step>
						<para>
							At the boot prompt, specify the <option>inst.ks=</option> boot option and the location of the Kickstart file. If the Kickstart file is in a network location, you must also configure the network using the <option>ip=</option> option. In some cases, the <option>inst.repo=</option> option is also necessary in order to access a software source from which necessary packages will be installed.
						</para>
						<para>
							For details about boot options and valid syntax, see <xref linkend="chap-anaconda-boot-options"/>.
						</para>
					</step>
					<step>
						<para>
							Start the installation by confirming your added boot options.
						</para>
					</step>
				</procedure>
				<para>
					The installation begins now, using the options specified in the Kickstart file. If the Kickstart file is valid and contains all required commands, the installation is completely automated from this point forward.
				</para>
			</section>

			<section id="sect-kickstart-installation-starting-automatic">
				<title>Starting the Kickstart Installation Automatically</title>
				<para>
					The following procedure explains how to completely automate the Kickstart installation, using a network boot (PXE) server and a properly configured boot loader. If you follow this procedure, you only need to turn on the system; no other interaction will be required from that moment until the installation finishes.
				</para>
				<note>
					<para>
						PXE installations are not available on IBM System&nbsp;z.
					</para>
				</note>
				<procedure id="proc-kickstart-installation-starting-network">
					<title>Starting the Kickstart Installation by Editing Boot Loader Configuration</title>
					<step>
						<para>
							Open the boot loader configuration file on your PXE server, and add the <option>inst.ks=</option> boot option to the appropriate line. The name of the file and its syntax depends on your system's architecture and hardware:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									On AMD64 and Intel&nbsp;64 systems with <emphasis>BIOS</emphasis>, the file name can be either <filename>default</filename> or based on your system's IP address. In this case, add the <option>inst.ks=</option> option to the <literal>append</literal> line in the installation entry. A sample <literal>append</literal> line in the configuration file looks similar to the following:
								</para>
<screen>append initrd=initrd.img inst.ks=http://10.32.5.1/mnt/archive/RHEL-7/7.x/Server/x86_64/kickstarts/ks.cfg</screen>
							</listitem>
							<listitem>
								<para>
									On systems using the <application>GRUB2</application> boot loader (AMD64 and Intel&nbsp;64 systems with UEFI firmware and IBM Power&nbsp;Systems servers), the file name will be <filename>grub.cfg</filename>. In this file, append the <option>inst.ks=</option> option to the <literal>kernel</literal> line in the installation entry. A sample <literal>kernel</literal> line in the configuration file will look similar to the following:
								</para>
<screen>kernel vmlinuz inst.ks=http://10.32.5.1/mnt/archive/RHEL-7/7.x/Server/x86_64/kickstarts/ks.cfg</screen>
							</listitem>
						</itemizedlist>
					</step>
					<step>
						<para>
							Boot the installation from the network server. For architecture-specific instructions, see:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<xref linkend="sect-booting-from-pxe-x86"/> for AMD64 and Intel&nbsp;64 systems
								</para>
							</listitem>
							<listitem>
								<para>
									<xref linkend="sect-booting-from-pxe-ppc"/> for IBM Power&nbsp;Systems servers
								</para>
							</listitem>
						</itemizedlist>
					</step>
				</procedure>
				<para>
					The installation begins now, using the installation options specified in the Kickstart file. If the Kickstart file is valid and contains all required commands, the installation is completely automated.
				</para>
			</section>
		</section>

	</section>

	<section id="sect-kickstart-syntax">
		<title>Kickstart Syntax Reference</title>


		<section id="sect-kickstart-commands">
			<title>Kickstart Commands and Options</title>


			<indexterm>
				<primary>Kickstart file</primary>
				<secondary>options</secondary>
			</indexterm>
			<indexterm>
				<primary>Kickstart file</primary>
				<secondary>creating</secondary>
			</indexterm>


			<note>
				<para>
					If an option is followed by an equals mark (<literal>=</literal>), a value must be specified after it. In the example commands, options in square brackets (<literal>[ ]</literal>) are optional arguments for the command.
				</para>
			</note>

			<variablelist>
				<varlistentry>
					<term>
						<command>auth</command> or <command>authconfig</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>auth</command></secondary>
						</indexterm>
						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>authconfig</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Sets up the authentication options for the system using the <command>authconfig</command> command, which can also be run on the command line after the installation finishes. See the <systemitem>authconfig(8)</systemitem> manual page and the <command>authconfig --help</command> command for more details. Passwords are shadowed by default.
						</para>
						<warning>
							<para>
								When using OpenLDAP with the <systemitem>SSL</systemitem> protocol for security, make sure that the <systemitem>SSLv2</systemitem> and <systemitem>SSLv3</systemitem> protocols are disabled in the server configuration. This is due to the POODLE SSL vulnerability (CVE-2014-3566). See <ulink url="https://access.redhat.com/solutions/1234843"/> for details.
							</para>
						</warning>
						<itemizedlist>
							<listitem>
								<para>
									<option>--enablenis</option> - Turns on NIS support. By default, <option>--enablenis</option> uses whatever domain it finds on the network. A domain should almost always be set by hand with the <option>--nisdomain=</option> option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nisdomain=</option> - NIS domain name to use for NIS services.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nisserver=</option> - Server to use for NIS services (broadcasts by default).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--useshadow</option> or <option>--enableshadow</option> - Use shadow passwords.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enableldap</option> - Turns on LDAP support in <filename>/etc/nsswitch.conf</filename>, allowing your system to retrieve information about users (for example, their UIDs, home directories, and shells) from an LDAP directory. To use this option, you must install the <package>nss-pam-ldapd</package> package. You must also specify a server and a base <firstterm>DN</firstterm> (distinguished name) with <option>--ldapserver=</option> and <option>--ldapbasedn=</option>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enableldapauth</option> - Use LDAP as an authentication method. This enables the <systemitem>pam_ldap</systemitem> module for authentication and changing passwords, using an LDAP directory. To use this option, you must have the <package>nss-pam-ldapd</package> package installed. You must also specify a server and a base DN with <option>--ldapserver=</option> and <option>--ldapbasedn=</option>. If your environment does not use <firstterm>TLS</firstterm> (Transport Layer Security), use the <option>--disableldaptls</option> switch to ensure that the resulting configuration file works.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--ldapserver=</option> - If you specified either <option>--enableldap</option> or <option>--enableldapauth</option>, use this option to specify the name of the LDAP server to use. This option is set in the <filename>/etc/ldap.conf</filename> file.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--ldapbasedn=</option> - If you specified either <option>--enableldap</option> or <option>--enableldapauth</option>, use this option to specify the DN in your LDAP directory tree under which user information is stored. This option is set in the <filename>/etc/ldap.conf</filename> file.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enableldaptls</option> - Use TLS (Transport Layer Security) lookups. This option allows LDAP to send encrypted user names and passwords to an LDAP server before authentication.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--disableldaptls</option> - Do not use TLS (Transport Layer Security) lookups in an environment that uses LDAP for authentication.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enablekrb5</option> - Use Kerberos 5 for authenticating users. Kerberos itself does not know about home directories, UIDs, or shells. If you enable Kerberos, you must make users' accounts known to this workstation by enabling LDAP, NIS, or Hesiod or by using the <command>useradd</command> command. If you use this option, you must have the <package>pam_krb5</package> package installed.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--krb5realm=</option> - The Kerberos 5 realm to which your workstation belongs.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--krb5kdc=</option> - The KDC (or KDCs) that serve requests for the realm. If you have multiple KDCs in your realm, use a comma-separated list without spaces.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--krb5adminserver=</option> - The KDC in your realm that is also running kadmind. This server handles password changing and other administrative requests. This server must be run on the master KDC if you have more than one KDC.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enablehesiod</option> - Enables Hesiod support for looking up user home directories, UIDs, and shells. More information on setting up and using Hesiod on your network is in <filename>/usr/share/doc/glibc-2.x.x/README.hesiod</filename>, which is included in the <package>glibc</package> package. Hesiod is an extension of DNS that uses DNS records to store information about users, groups, and various other items.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--hesiodlhs</option> and <option>--hesiodrhs</option> - The <systemitem>Hesiod</systemitem> LHS (left-hand side) and RHS (right-hand side) values, set in <filename>/etc/hesiod.conf</filename>. The <systemitem>Hesiod</systemitem> library uses these values to search DNS for a name, similar to the way that <systemitem>LDAP</systemitem> uses a base DN.
								</para>
								<para>
									To look up user information for the user name <systemitem>jim</systemitem>, the Hesiod library looks up <literal>jim.passwd<replaceable>LHS</replaceable><replaceable>RHS</replaceable></literal>, which should resolve to a TXT record that contains a string identical to an entry for that user in the <filename>passwd</filename> file: <computeroutput>jim:*:1001:1001:Jungle Jim:/home/jim:/bin/bash</computeroutput>. To look up groups, the Hesiod library looks up <literal>jim.group<replaceable>LHS</replaceable><replaceable>RHS</replaceable></literal> instead.
								</para>
								<para>
									To look up users and groups by number, make <literal>1001.uid</literal> a CNAME for <literal>jim.passwd</literal>, and <literal>1001.gid</literal> a CNAME for <literal>jim.group</literal>. Note that the library does not place a period (<literal>.</literal>) in front of the LHS and RHS values when performing a search. Therefore, if the LHS and RHS values need to have a period placed in front of them, you must include the period in the values you set for <option>--hesiodlhs</option> and <option>--hesiodrhs</option>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enablesmbauth</option> - Enables authentication of users against an SMB server (typically a Samba or Windows server). SMB authentication support does not know about home directories, UIDs, or shells. If you enable SMB, you must make users' accounts known to the	workstation by enabling LDAP, NIS, or Hesiod or by using the <command>useradd</command> command.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--smbservers=</option> - The name of the servers to use for SMB authentication. To specify more than one server, separate the names with commas (<literal>,</literal>).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--smbworkgroup=</option> - The name of the workgroup for the SMB servers.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enablecache</option> - Enables the <systemitem>nscd</systemitem> service. The <systemitem>nscd</systemitem> service caches information about users, groups, and various other types of information. Caching is especially helpful if you choose to distribute information about users and groups over your network using <systemitem>NIS</systemitem>, <systemitem>LDAP</systemitem>, or <systemitem>Hesiod</systemitem>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--passalgo=</option> - Specify <option>sha256</option> to set up the SHA-256 hashing algorithm or <option>sha512</option> to set up the SHA-512 hashing algorithm.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>autopart</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>autopart</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Automatically creates partitions: a root (<filename class="partition">/</filename>) partition (1 GB or larger), a <filename class="partition">swap</filename> partition, and an appropriate <filename class="partition">/boot</filename> partition for the architecture. On large enough drives (50&nbsp;GB and larger), this also creates a <filename class="partition">/home</filename> partition.
						</para>
						<important>
							<para>
								The <command>autopart</command> option cannot be used together with the <command>part/partition</command>, <command>raid</command>, <command>logvol</command>, or <command>volgroup</command> options in the same Kickstart file.
							</para>
						</important>
						<itemizedlist>
							<listitem>
								<para>
									<option>--type=</option> - Selects one of the predefined automatic partitioning schemes you want to use. Accepts the following values:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<literal>lvm</literal>: The LVM partitioning scheme.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>btrfs</literal>: The Btrfs partitioning scheme.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>plain</literal>: Regular partitions with no LVM or Btrfs.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>thinp</literal>: The LVM Thin Provisioning partitioning scheme.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For a description of the available partition schemes, see <xref linkend="sect-file-system-types-x86"/>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fstype=</option> - Selects one of the available file system types. The available values are <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>, <literal>xfs</literal>, and <literal>vfat</literal>. The default file system is <literal>xfs</literal>. For information about these file systems, see <xref linkend="sect-file-system-types-x86"/>.
								</para>

							</listitem>
							<listitem>
								<para>
									<option>--nohome</option> - Disables automatic creation of the <systemitem>/home</systemitem> partition.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nolvm</option> - Do not use LVM or Btrfs for automatic partitioning. This option is equal to <option>--type=plain</option>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--encrypted</option> - Encrypts all partitions. This is equivalent to checking the <guilabel>Encrypt partitions</guilabel> check box on the initial partitioning screen during a manual graphical installation.
								</para>
								<note>
									<para>
										When encrypting one or more partitions, <application>Anaconda</application> attempts to gather 256 bits of entropy to ensure the partitions are encrypted securely. Gathering entropy can take some time - the process will stop after a maximum of 10 minutes, regardless of whether sufficient entropy has been gathered.
									</para>
									<para>
										The process can be sped up by interacting with the installation system (typing on the keyboard or moving the mouse). If you are installing in a virtual machine, you can also attach a virtio-rng device (a virtual random number generator) to the guest as described in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_device_configuration-Random_number_generator_device.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Virtualization Deployment and Administration Guide</ulink>.
									</para>
								</note>
							</listitem>
							<listitem>
								<para>
									<option>--passphrase=</option> - Provides a default system-wide passphrase for all encrypted devices.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--escrowcert=<replaceable>URL_of_X.509_certificate</replaceable></option> - Stores data encryption keys of all encrypted volumes as files in <filename>/root</filename>, encrypted using the X.509 certificate from the URL specified with <replaceable>URL_of_X.509_certificate</replaceable>. The keys are stored as a separate file for each encrypted volume. This option is only meaningful if <option>--encrypted</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--backuppassphrase</option> - Adds a randomly-generated passphrase to each encrypted volume. Store these passphrases in separate files in <filename>/root</filename>, encrypted using the X.509 certificate specified with <option>--escrowcert</option>. This option is only meaningful if <option>--escrowcert</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--cipher=</option> - Specifies the type of encryption to use if the <application>Anaconda</application> default <systemitem>aes-xts-plain64</systemitem> is not satisfactory. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect. Available types of encryption are listed in the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Security Guide</ulink>, but Red&nbsp;Hat strongly recommends using either <systemitem>aes-xts-plain64</systemitem> or <systemitem>aes-cbc-essiv:sha256</systemitem>.
								</para>

								<note>
									<para>
										It is recommended to use the <option>autopart --nohome</option> Kickstart option when installing on a single FBA DASD of the CMS type. This ensures that the installer does not create a separate <filename>/home</filename> partition. The installation then proceeds successfully.
									</para>
								</note>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>autostep</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>autostep</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Normally, Kickstart installations skip unnecessary screens. This option makes the installation program step through every screen, displaying each briefly. This option should not be used when deploying a system because it can disrupt package installation.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--autoscreenshot</option> - Take a screenshot at every step during installation. These screenshots are stored in <filename class="directory">/tmp/anaconda-screenshots/</filename> during the installation, and after the installation finishes you can find them in <filename class="directory">/root/anaconda-screenshots</filename>.
								</para>
								<para>
									Each screen is only captured right before the installer switches to the next one. This is important, because if you do not use all required Kickstart options and the installation therefore does not begin automatically, you can go to the screens which were not automatically configured, perform any configuration you want. Then, when you click <guilabel>Done</guilabel> to continue, the screen is captured including the configuration you just provided.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>bootloader</command> (required)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>bootloader</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Specifies how the boot loader should be installed.
						</para>
						<important>
							<para>
								Red&nbsp;Hat recommends setting up a boot loader password on every system. An unprotected boot loader can allow a potential attacker to modify the system's boot options and gain unauthorized access to the system.
							</para>
						</important>

						<important>
							<para>
								Device names in the <literal>sd<replaceable>X</replaceable></literal> (or <literal>/dev/sd<replaceable>X</replaceable></literal>) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from <filename>/dev/disk</filename>. For example, instead of:
							</para>
<screen><command>part / --fstype=xfs --onpart=sda1</command></screen>
							<para>
								You could use an entry similar to one of the following:
							</para>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1</command></screen>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1</command></screen>
							<para>
								This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/persistent_naming.html"><citetitle>Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Storage Administration Guide</citetitle></ulink> for more in-depth information about different ways to consistently refer to storage devices.
							</para>
						</important>


						<note>
							<para>
								In some cases, a special partition is required to install the boot loader on AMD64 and Intel&nbsp;64 systems. The type and size of this partition depends on whether the disk you are installing the boot loader to uses the <firstterm>Master Boot Record</firstterm> (MBR) or a <firstterm>GUID Partition Table</firstterm> (GPT) schema. For more information, see <xref linkend="sect-bootloader-x86"/>.
							</para>
						</note>
						<itemizedlist>
							<listitem>
								<para>
									<option>--append=</option> - Specifies additional kernel parameters. To specify multiple parameters, separate them with spaces. For example:
								</para>
<screen><command>bootloader --location=mbr --append="hdd=ide-scsi ide=nodma"</command></screen>
								<para>
									The <option>rhgb</option> and <option>quiet</option> parameters are always used, even if you do not specify them here or do not use the <option>--append=</option> command at all.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--boot-drive=</option> - Specifies which drive the boot loader should be written to, and therefore which drive the computer will boot from. If you use a multipath device as the boot drive, specify only one member of the device.
								</para>
								<important>
									<para>
										The <option>--boot-drive=</option> option is currently being ignored in &PRODUCT; installations on IBM System&nbsp;z systems using the <application>zipl</application> boot loader. When <application>zipl</application> is installed, it determines the boot drive on its own.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--leavebootorder</option> - The installer will add &PRODUCT; 7 to the top of the list of installed systems in the boot loader, and preserve all existing entries as well as their order.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--driveorder=</option> - Specifies which drive is first in the BIOS boot order. For example:
								</para>
<screen><command>bootloader --driveorder=sda,hda</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--location=</option> - Specifies where the boot record is written. Valid values are the following:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<literal>mbr</literal> - The default option. Depends on whether the drive uses the Master Boot Record (MBR) or GUID Partition Table (GPT) scheme:
										</para>
										<itemizedlist>
											<listitem>
												<para>
													On a GPT-formatted disk, this option installs stage 1.5 of the boot loader into the BIOS boot partition.
												</para>
											</listitem>
											<listitem>
												<para>
													On an MBR-formatted disk, stage 1.5 is installed into the empty space between the MBR and the first partition.
												</para>
											</listitem>
										</itemizedlist>
									</listitem>
									<listitem>
										<para>
											<literal>partition</literal> - Install the boot loader on the first sector of the partition containing the kernel.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>none</literal> - Do not install the boot loader.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									In most cases, this option does not need to be specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--password=</option> - If using <application>GRUB2</application>, sets the boot loader password to the one specified with this option. This should be used to restrict access to the <application>GRUB2</application> shell, where arbitrary kernel options can be passed.
								</para>
								<para>
									If a password is specified, <application>GRUB2</application> also asks for a user name. The user name is always <literal>root</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--iscrypted</option> - Normally, when you specify a boot loader password using the <option>--password=</option> option, it is stored in the Kickstart file in plain text. If you want to encrypt the password, use this option and an encrypted password.
								</para>
								<para>
									To generate an encrypted password, use the <command>grub2-mkpasswd-pbkdf2</command> command, enter the password you want to use, and copy the command's output (the hash starting with <literal>grub.pbkdf2</literal>) into the Kickstart file. An example <command>bootloader</command> Kickstart entry with an encrypted password looks similar to the following:
								</para>
<screen><command>bootloader --iscrypted --password=grub.pbkdf2.sha512.10000.5520C6C9832F3AC3D149AC0B24BE69E2D4FB0DBEEDBD29CA1D30A044DE2645C4C7A291E585D4DC43F8A4D82479F8B95CA4BA4381F8550510B75E8E0BB2938990.C688B6F0EF935701FF9BD1A8EC7FE5BD2333799C98F28420C5CC8F1A2A233DE22C83705BB614EA17F3FDFDF4AC2161CEA3384E56EB38A2E39102F5334C47405E</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--timeout=</option> - Specifies the amount of time the boot loader waits before booting the default option (in seconds).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--default=</option> - Sets the default boot image in the boot loader configuration.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--extlinux</option> - Use the <application>extlinux</application> boot loader instead of <application>GRUB2</application>. This option only works on systems supported by <application>extlinux</application>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--disabled</option> &mdash; This option is a stronger version of <option>--location=none</option>. While <option>--location=none</option> simply disables boot loader installation, <option>--disabled</option> disables boot loader installation and also disables installation of the package containing the boot loader, thus saving space.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>btrfs</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>btrfs</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Create a Btrfs volume or subvolume. For a volume, the syntax is:
						</para>
<screen><command>btrfs <replaceable>mntpoint</replaceable> --data=<replaceable>level</replaceable> --metadata=<replaceable>level</replaceable> --label=<replaceable>label</replaceable> <replaceable>partitions</replaceable></command></screen>
						<para>
							One or more partitions can be specified in <replaceable>partitions</replaceable>. When specifying more than one partitions, the entries must be separated by a single space. See <xref linkend="exam-kickstart-create-btrfs"/> for a demonstration.
						</para>
						<para>
							For a subvolume, the syntax is:
						</para>
<screen><command>btrfs <replaceable>mntpoint</replaceable> --subvol --name=<replaceable>path</replaceable> <replaceable>parent</replaceable></command></screen>
						<para>
							<replaceable>parent</replaceable> should be the identifier of the subvolume's parent volume and <replaceable>mntpoint</replaceable> is the location where the file system is mounted.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--data=</option> - RAID level to use for file system data (such as 0, 1, or 10). This parameter is optional, has no meaning for subvolumes, and requires more than one physical disk.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--metadata=</option> - RAID level to use for file system/volume metadata (such as <literal>0</literal>, <literal>1</literal>, or <literal>10</literal>). Optional. This option has no meaning for subvolumes and requires more than one physical disk.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--label=</option> - Specify a label for the Btrfs file system. If the given label is already in use by another file system, a new label is created. This option has no meaning for subvolumes.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--noformat</option> or <option>--useexisting</option> - Use an existing Btrfs volume (or subvolume) and do not reformat the file system.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--mkfsoptions=</option> - Specifies additional parameters to be passed to the program that makes a filesystem on this partition. No processing is done on the list of arguments, so they must be supplied in a format that can be passed directly to the <application>mkfs</application> program. This means multiple options should be comma-separated or surrounded by double quotes, depending on the filesystem.
								</para>
							</listitem>
						</itemizedlist>
						<para>
							The following example shows how to create a Btrfs volume from member partitions on three disks with subvolumes for <filename class="directory">/</filename> and <filename class="directory">/home</filename>. The main volume is not mounted or used directly in this example.
						</para>
						<example id="exam-kickstart-create-btrfs">
							<title>Creating Btrfs Volumes and Subvolumes</title>
<screen>
<command>part btrfs.01 --size=6000 --ondisk=sda</command>
<command>part btrfs.02 --size=6000 --ondisk=sdb</command>
<command>part btrfs.03 --size=6000 --ondisk=sdc</command>

<command>btrfs none --data=0 --metadata=1 --label=rhel7 btrfs.01 btrfs.02 btrfs.03</command>
<command>btrfs / --subvol --name=root LABEL=rhel7</command>
<command>btrfs /home --subvol --name=home rhel7</command>
</screen>
						</example>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>clearpart</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>clearpart</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Removes partitions from the system, prior to creation of new partitions. By default, no partitions are removed.
						</para>

						<important>
							<para>
								Device names in the <literal>sd<replaceable>X</replaceable></literal> (or <literal>/dev/sd<replaceable>X</replaceable></literal>) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from <filename>/dev/disk</filename>. For example, instead of:
							</para>
<screen><command>part / --fstype=xfs --onpart=sda1</command></screen>
							<para>
								You could use an entry similar to one of the following:
							</para>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1</command></screen>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1</command></screen>
							<para>
								This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/persistent_naming.html"><citetitle>Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Storage Administration Guide</citetitle></ulink> for more in-depth information about different ways to consistently refer to storage devices.
							</para>
						</important>


						<note>
							<para>
								If the <command>clearpart</command> command is used, then the <command>part --onpart</command> command cannot be used on a logical partition.
							</para>
						</note>
						<para>
							For a detailed example of partitioning including the <command>clearpart</command> command, see <xref linkend="sect-kickstart-partitioning-example"/>.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--all</option> - Erases all partitions from the system.
								</para>
								<warning>
									<para>
										This option will erase all disks which can be reached by the installer, including any attached network storage. Use this option with caution.
									</para>
									<para>
										You can prevent <command>clearpart</command> from wiping storage you want to preserve by using the <option>--drives=</option> option and specifying only the drives you want to clear, by attaching network storage later (for example, in the <command>%post</command> section of the Kickstart file), or by blacklisting the kernel modules used to access network storage.
									</para>
								</warning>
							</listitem>
							<listitem>
								<para>
									<option>--drives=</option> - Specifies which drives to clear partitions from. For example, the following clears all the partitions on the first two drives on the primary IDE controller:
								</para>
<screen><command>clearpart --drives=hda,hdb --all</command></screen>
								<para>
									To clear a multipath device, use the format <literal>disk/by-id/scsi-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to clear a disk with WWID <literal>58095BEC5510947BE8C0360F604351918</literal>, use:
								</para>
<screen><command>clearpart --drives=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918</command></screen>
								<para>
									This format is preferable for all multipath devices, but if errors arise, multipath devices that do not use <firstterm>logical volume management</firstterm> (LVM) can also be cleared using the format <literal>disk/by-id/dm-uuid-mpath-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to clear a disk with WWID <literal>2416CD96995134CA5D787F00A5AA11017</literal>, use:
								</para>
<screen><command>clearpart --drives=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017</command></screen>
								<warning>
									<para>
										Never specify multipath devices by device names like <literal>mpatha</literal>. Device names such as this are not specific to a particular disk. The disk named <filename>/dev/mpatha</filename> during installation might not be the one that you expect it to be. Therefore, the <command>clearpart</command> command could target the wrong disk.
									</para>
								</warning>
							</listitem>
							<listitem>
								<para>
									<option>--list=</option> - Specifies which partitions to clear. This option overrides the <option>--all</option> and <option>--linux</option> options if used. Can be used across different drives. For example:
								</para>
<screen><command>clearpart --list=sda2,sda3,sdb1</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--linux</option> - Erases all Linux partitions.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--none</option> (default) - Do not remove any partitions.
								</para>
							</listitem>
						</itemizedlist>
						<note>
							<para>
								Using the <command>clearpart --all</command> command in a Kickstart file to remove all existing partitions during the installation can cause <application>Anaconda</application> to pause and prompt you for a confirmation in certain cases. If you need to perform the installation automatically with no interaction, add the <command>zerombr</command> command to your Kickstart file.
							</para>
						</note>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>cmdline</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>cmdline</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Perform the installation in a completely non-interactive command line mode. Any prompt for interaction halts the installation. This mode is useful on IBM System&nbsp;z systems with the x3270 terminal. See <xref linkend="sect-parameter-configuration-files-kickstart-s390"/>.
						</para>
						<important>
							<para>
								For a fully automatic installation, you must either specify one of the available modes (<command>graphical</command>, <command>text</command>, or <command>cmdline</command>) in the Kickstart file, or you must use the <option>console=</option> boot option as described in <xref linkend="list-boot-options-display"/>. If no mode is specified, the system will prompt you to choose one before continuing.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>device</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>device</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							On most PCI systems, the installation program automatically detects Ethernet and SCSI cards. However, on older systems and some PCI systems, Kickstart requires a hint to find the proper devices. The <command>device</command> command, which tells the installation program to install extra modules, uses the following format:
						</para>
<screen><command>device <replaceable>moduleName</replaceable> --opts=<replaceable>options</replaceable></command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<replaceable>moduleName</replaceable> - Replace with the name of the kernel module which should be installed.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--opts=</option> - Options to pass to the kernel module. For example:
								</para>
<screen><command>device --opts="aic152x=0x340 io=11"</command></screen>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>driverdisk</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>driverdisk</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Driver disks can be used during Kickstart installations to provide additional drivers not included by default. You must copy the driver disks's contents to the root directory of a partition on the system's hard drive. Then, you must use the <command>driverdisk</command> command to specify that the installation program should look for a driver disk and its location.
						</para>
<screen><command>driverdisk [<replaceable>partition</replaceable>|--source=<replaceable>url</replaceable>|--biospart=<replaceable>biospart</replaceable>]</command></screen>
						<para>
							Alternatively, a network location can be specified for the driver disk:
						</para>
<screen>
<command>driverdisk --source=ftp://path/to/dd.img</command>
<command>driverdisk --source=http://path/to/dd.img</command>
<command>driverdisk --source=nfs:host:/path/to/img</command>
</screen>
						<itemizedlist>
							<listitem>
								<para>
									<replaceable>partition</replaceable> - Partition containing the driver disk. Note that the partition must be specified as a full path (for example, <literal>/dev/sdb1</literal>), <emphasis>not</emphasis> just the partition name (for example, <literal>sdb1</literal>).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--source=</option> - URL for the driver disk. NFS locations can be given in the form of <literal>nfs:<replaceable>host</replaceable>:/<replaceable>path/to/img</replaceable></literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--biospart=</option> - BIOS partition containing the driver disk (for example, <literal>82p2</literal>).
								</para>
							</listitem>
						</itemizedlist>


						<para>

							Driver disks can also be loaded from a hard disk drive or a similar device instead of being loaded over the network or from <systemitem>initrd</systemitem>. Follow this procedure:

						</para>
						<procedure id="loading-driver-disk-from-HDD">
							<step>
								<para>
									Load the driver disk on a hard disk drive, a USB or any similar device.
								</para>
							</step>
							<step>
								<para>
									Set the label, for example, <replaceable>DD</replaceable>, to this device.
								</para>
							</step>
							<step>
								<para>
									Add the following line to your Kickstart file:
<screen>driverdisk <replaceable>LABEL</replaceable>=<replaceable>DD</replaceable>:/e1000.rpm</screen>
								</para>
							</step>



						</procedure>

						<para>
							Replace <replaceable>DD</replaceable> with a specific label and replace <replaceable>dd.rpm</replaceable> with a specific name. Use anything supported by the <command>inst.repo</command> command instead of <replaceable>LABEL</replaceable> to specify your hard disk drive.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>eula</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>eula</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Use this option to accept the <firstterm>End User License Agreement</firstterm> (EULA) without user interaction. Specifying this option prevents <application>Initial Setup</application> from prompting you to accept the license agreement after you finish the installation and reboot the system for the first time. See <xref linkend="chap-initial-setup"/> for more information.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--agreed</option> (required) - Accept the EULA. This option must always be used, otherwise the <command>eula</command> command is meaningless.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>fcoe</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>fcoe</command></secondary>
						</indexterm>
						<indexterm>
							<primary><application>fcoe</application></primary>
							<secondary>via Kickstart</secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Specify which FCoE devices should be activated automatically in addition to those discovered by <firstterm>Enhanced Disk Drive Services</firstterm> (EDD).
						</para>
<screen><command>fcoe --nic=<replaceable>name</replaceable> [<replaceable>options</replaceable>]</command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<option>--nic=</option> (required) - The name of the device to be activated.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--dcb=</option> - Establish <firstterm>Data Center Bridging</firstterm> (DCB) settings.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--autovlan</option> - Discover VLANs automatically.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>firewall</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>firewall</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Specify the firewall configuration for the installed system.
						</para>
<screen><command>firewall --enabled|--disabled <replaceable>device</replaceable> [<replaceable>options</replaceable>]</command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<option>--enabled</option> or <option>--enable</option> - Reject incoming connections that are not in response to outbound requests, such as DNS replies or DHCP requests. If access to services running on this machine is needed, you can choose to allow specific services through the firewall.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--disabled</option> or <option>--disable</option> - Do not configure any iptables rules.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--trust=</option> - Listing a device here, such as em1, allows all traffic coming to and from that device to go through the firewall. To list more than one device, use <option>--trust em1 --trust em2</option>. Do NOT use a comma-separated format such as <option>--trust em1, em2</option>.
								</para>
							</listitem>
							<listitem>
								<para>
									<replaceable>incoming</replaceable> - Replace with one or more of the following to allow the specified services through the firewall.
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<option>--ssh</option>
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--smtp</option>
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--http</option>
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--ftp</option>
										</para>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<para>
									<option>--port=</option> - You can specify that ports be allowed through the firewall using the port:protocol format. For example, to allow IMAP access through your firewall, specify <literal>imap:tcp</literal>. Numeric ports can also be specified explicitly; for example, to allow UDP packets on port 1234 through, specify <literal>1234:udp</literal>. To specify multiple ports, separate them by commas.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--service=</option> - This option provides a higher-level way to allow services through the firewall. Some services (like <systemitem>cups</systemitem>, <systemitem>avahi</systemitem>, and so on.) require multiple ports to be open or other special configuration in order for the service to work. You can specify each individual port with the <option>--port</option> option, or specify <command>--service=</command> and open them all at once.
								</para>
								<para>
									Valid options are anything recognized by the <application>firewall-offline-cmd</application> program in the <package>firewalld</package> package. If <systemitem>firewalld</systemitem> is running, <command>firewall-cmd --get-services</command> provides a list of known service names.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>firstboot</command> (optional)
					</term>
					<listitem>


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>firstboot</command></secondary>
						</indexterm>
						<indexterm>
							<primary><application>Initial Setup</application></primary>
							<secondary>via Kickstart</secondary>
						</indexterm>


						<para>
							Determine whether the <application>Initial Setup</application> application starts the first time the system is booted. If enabled, the <package>initial-setup</package> package must be installed. If not specified, this option is disabled by default.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--enable</option> or <option>--enabled</option> - <application>Initial Setup</application> is started the first time the system boots.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--disable</option> or <option>--disabled</option> - <application>Initial Setup</application> is not started the first time the system boots.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--reconfig</option> - Enable the <application>Initial Setup</application> to start at boot time in reconfiguration mode. This mode enables the language, mouse, keyboard, root password, security level, time zone and networking configuration options in addition to the default ones.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>group</command> (optional)
					</term>
					<listitem>


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>group</command></secondary>
						</indexterm>


						<para>
							Creates a new user group on the system. If a group with the given name or GID already exists, this command fails. In addition, the <command>user</command> command can be used to create a new group for the newly created user.
						</para>
<screen><command>group --name=<replaceable>name</replaceable> [--gid=<replaceable>gid</replaceable>]</command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<option>--name=</option> - Provides the name of the group.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--gid=</option> - The group's GID. If not provided, defaults to the next available non-system GID.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>graphical</command> (optional)
					</term>
					<listitem>


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>graphical</command></secondary>
						</indexterm>


						<para>
							Perform the installation in graphical mode. This is the default.
						</para>
						<important>
							<para>
								For a fully automatic installation, you must either specify one of the available modes (<command>graphical</command>, <command>text</command>, or <command>cmdline</command>) in the Kickstart file, or you must use the <option>console=</option> boot option as described in <xref linkend="list-boot-options-display"/>. If no mode is specified, the system will prompt you to choose one before continuing.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>halt</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>halt</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Halt the system after the installation has successfully completed. This is similar to a manual installation, where <application>Anaconda</application> displays a message and waits for the user to press a key before rebooting. During a Kickstart installation, if no completion method is specified, this option is used as the default.
						</para>
						<para>
							The <command>halt</command> command is equivalent to the <command>shutdown -h</command> command.
						</para>
						<para>
							For other completion methods, see the <command>poweroff</command>, <command>reboot</command>, and <command>shutdown</command> commands.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>ignoredisk</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>ignoredisk</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Causes the installation program to ignore the specified disks. This is useful if you use automatic partitioning and want to be sure that some disks are ignored. For example, without <command>ignoredisk</command>, attempting to deploy on a SAN-cluster the Kickstart would fail, as the installation program detects passive paths to the SAN that return no partition table.
						</para>
<screen><command>ignoredisk --drives=<replaceable>drive1,drive2</replaceable>,...</command></screen>
						<para>
							where <replaceable>driveN</replaceable> is one of <literal>sda</literal>, <literal>sdb</literal>,..., <literal>hda</literal>,... and so on.
						</para>

						<important>
							<para>
								Device names in the <literal>sd<replaceable>X</replaceable></literal> (or <literal>/dev/sd<replaceable>X</replaceable></literal>) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from <filename>/dev/disk</filename>. For example, instead of:
							</para>
<screen><command>part / --fstype=xfs --onpart=sda1</command></screen>
							<para>
								You could use an entry similar to one of the following:
							</para>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1</command></screen>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1</command></screen>
							<para>
								This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/persistent_naming.html"><citetitle>Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Storage Administration Guide</citetitle></ulink> for more in-depth information about different ways to consistently refer to storage devices.
							</para>
						</important>


						<para>
							To ignore a multipath device that does not use <firstterm>logical volume management</firstterm> (LVM), use the format <literal>disk/by-id/dm-uuid-mpath-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to ignore a disk with WWID <literal>2416CD96995134CA5D787F00A5AA11017</literal>, use:
						</para>
<screen><command>ignoredisk --drives=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017</command></screen>
						<para>
							Multipath devices that use LVM are not assembled until after <application>Anaconda</application> has parsed the Kickstart file. Therefore, you cannot specify these devices in the format <literal>dm-uuid-mpath</literal>. Instead, to ignore a multipath device that uses LVM, use the format <literal>disk/by-id/scsi-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to ignore a disk with WWID <literal>58095BEC5510947BE8C0360F604351918</literal>, use:
						</para>
<screen><command>ignoredisk --drives=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918</command></screen>
						<warning>
							<para>
								Never specify multipath devices by device names like <literal>mpatha</literal>. Device names such as this are not specific to a particular disk. The disk named <filename>/dev/mpatha</filename> during installation might not be the one that you expect it to be. Therefore, the <command>clearpart</command> command could target the wrong disk.
							</para>
						</warning>
						<itemizedlist>
							<listitem>
								<para>
									<option>--only-use</option> - Specifies a list of disks for the installation program to use. All other disks are ignored. For example, to use disk <literal>sda</literal> during installation and ignore all other disks:
								</para>
<screen><command>ignoredisk --only-use=sda</command></screen>
								<para>
									To include a multipath device that does not use LVM:
								</para>
<screen><command>ignoredisk --only-use=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017</command></screen>
								<para>
									To include a multipath device that uses LVM:
								</para>
<screen><command>ignoredisk --only-use=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--interactive</option> - Allows you to manually navigate the advanced storage screen.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>install</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>install</command></secondary>
						</indexterm>
						<indexterm>
							<primary>Kickstart file</primary>
							<secondary>installation methods</secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							The default installation mode. You must specify the type of installation from <literal>cdrom</literal>, <literal>harddrive</literal>, <literal>nfs</literal>, <literal>liveimg</literal>, or <literal>url</literal> (for FTP, HTTP, or HTTPS installations). The <command>install</command> command and the installation method command must be on separate lines. For example:
						</para>
<screen>
<command>install</command>
<command>liveimg --url=file:///images/install/squashfs.img --noverifyssl</command>
</screen>
						<itemizedlist>
							<listitem>
								<para>
									<command>cdrom</command> - Install from the first optical drive on the system.
								</para>
							</listitem>
							<listitem>
								<para>
									<command>harddrive</command> - Install from a Red&nbsp;Hat installation tree or full installation ISO image on a local drive. The drive must contain a file system the installation program can mount: <systemitem>ext2</systemitem>, <systemitem>ext3</systemitem>, <systemitem>ext4</systemitem>, <systemitem>vfat</systemitem>, or <systemitem>xfs</systemitem>.
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<option>--biospart=</option> - BIOS partition to install from (such as <filename class="partition">82</filename>).
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--partition=</option> - Partition to install from (such as <filename class="partition">sdb2</filename>).
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--dir=</option> - Directory containing the <filename><replaceable>variant</replaceable></filename> directory of the installation tree, or the ISO image of the full installation DVD.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For example:
								</para>
<screen><command>harddrive --partition=hdb2 --dir=/tmp/install-tree</command>
</screen>
							</listitem>
							<listitem>
								<para>
									<command>liveimg</command> - Install from a disk image instead of packages. The image can be the <filename>squashfs.img</filename> file from a live ISO image, a compressed tar file (<literal>.tar</literal>, <literal>.tbz</literal>, <literal>.tgz</literal>, <literal>.txz</literal>, <literal>.tar.bz2</literal>, <literal>.tar.gz</literal>, or <literal>.tar.xz</literal>.), or any file system that the installation media can mount. Supported file systems are <systemitem>ext2</systemitem>, <systemitem>ext3</systemitem>, <systemitem>ext4</systemitem>, <systemitem>vfat</systemitem>, and <systemitem>xfs</systemitem>.
								</para>
								<note>
									<para>
										When using the <literal>liveimg</literal> installation mode with a driver disk, drivers on the disk will not automatically be included in the installed system. If necessary, these drivers should be installed manually, or in the <literal>%post</literal> section of a kickstart script.
									</para>
								</note>
								<itemizedlist>
									<listitem>
										<para>
											<option>--url=</option> - The location to install from. Supported protocols are <systemitem class="protocol">HTTP</systemitem>, <systemitem class="protocol">HTTPS</systemitem>, <systemitem class="protocol">FTP</systemitem>, and <systemitem class="protocol">file</systemitem>.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--proxy=</option> - Specify an <systemitem class="protocol">HTTP</systemitem>, <systemitem class="protocol">HTTPS</systemitem> or <systemitem class="protocol">FTP</systemitem> proxy to use while performing the installation.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--checksum=</option> - An optional argument with the <systemitem>SHA256</systemitem> checksum of the image file, used for verification.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--noverifyssl</option> - Disable SSL verification when connecting to an <systemitem>HTTPS</systemitem> server.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For example:
								</para>
<screen><command>liveimg --url=file:///images/install/squashfs.img --checksum=03825f567f17705100de3308a20354b4d81ac9d8bed4bb4692b2381045e56197 --noverifyssl</command></screen>
							</listitem>
							<listitem>
								<para>
									<command>nfs</command> - Install from the NFS server specified.
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<option>--server=</option> - Server from which to install (host name or IP).
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--dir=</option> - Directory containing the <filename><replaceable>variant</replaceable></filename> directory of the installation tree.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--opts=</option> - Mount options to use for mounting the NFS export. (optional)
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For example:
								</para>
<screen><command>nfs --server=nfsserver.example.com --dir=/tmp/install-tree</command></screen>
							</listitem>
							<listitem>
								<para>
									<command>url</command> - Install from an installation tree on a remote server using FTP, HTTP, or HTTPS.
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<option>--url=</option> - The location to install from. Supported protocols are <literal>HTTP</literal>, <literal>HTTPS</literal>, <literal>FTP</literal>, and <literal>file</literal>.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--mirrorlist=</option> - The mirror URL to install from.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--proxy=</option> - Specify an <literal>HTTP</literal>, <literal>HTTPS</literal> or <literal>FTP</literal> proxy to use while performing the installation.
										</para>
									</listitem>
									<listitem>
										<para>
											<option>--noverifyssl</option> - Disable SSL verification when connecting to an <systemitem>HTTPS</systemitem> server.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For example:
								</para>
<screen><command>url --url http://<replaceable>server</replaceable>/<replaceable>path</replaceable></command></screen>
								<para>
									or:
								</para>
<screen><command>url --url ftp://<replaceable>username</replaceable>:<replaceable>password</replaceable>@<replaceable>server</replaceable>/<replaceable>path</replaceable></command></screen>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>iscsi</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>iscsi</command></secondary>
						</indexterm>


					</term>
					<listitem>
<screen><command>iscsi --ipaddr=<replaceable>address</replaceable> [<replaceable>options</replaceable>]</command></screen>
						<para>
							Specifies additional iSCSI storage to be attached during installation. If you use the <command>iscsi</command> command, you must also assign a name to the iSCSI node, using the <command>iscsiname</command> command. The <command>iscsiname</command> command must appear before the <command>iscsi</command> command in the Kickstart file.
						</para>
						<para>
							We recommend that wherever possible you configure iSCSI storage in the system BIOS or firmware (iBFT for Intel systems) rather than use the <command>iscsi</command> command. <application>Anaconda</application> automatically detects and uses disks configured in BIOS or firmware and no special configuration is necessary in the Kickstart file.
						</para>
						<para>
							If you must use the <command>iscsi</command> command, ensure that networking is activated at the beginning of the installation, and that the <command>iscsi</command> command appears in the Kickstart file <emphasis>before</emphasis> you refer to iSCSI disks with commands such as <command>clearpart</command> or <command>ignoredisk</command>.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--ipaddr=</option> (required) - the IP address of the target to connect to.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--port=</option> (required) - the port number (typically, <option>--port=3260</option>)
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--target=</option> - the target <firstterm>IQN</firstterm> (iSCSI Qualified Name).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--iface=</option> - bind the connection to a specific network interface instead of using the default one determined by the network layer. Once used, it must be specified in all instances of the <command>iscsi</command> command in the entire Kickstart file.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--user=</option> - the user name required to authenticate with the target
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--password=</option> - the password that corresponds with the user name specified for the target
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--reverse-user=</option> - the user name required to authenticate with the initiator from a target that uses reverse CHAP authentication
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--reverse-password=</option> - the password that corresponds with the user name specified for the initiator
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>iscsiname</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>iscsiname</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Assigns a name to an iSCSI node specified by the iscsi parameter. If you use the <parameter>iscsi</parameter> parameter in your Kickstart file, you must specify <command>iscsiname</command> <emphasis>earlier</emphasis> in the Kickstart file.
						</para>
<screen><command>iscsiname</command> <replaceable>iqn</replaceable></screen>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>%addon com_redhat_kdump</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary>kdump</secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							This command configures the <application>kdump</application> kernel crash dumping mechanism.
						</para>
						<note>
							<para>
								The syntax for this command is unusual because it is an add-on rather than a built-in Kickstart command. For more information about add-ons, see <xref linkend="sect-kickstart-addon"/>.
							</para>
						</note>
						<para>
							<application>Kdump</application> is a kernel crash dumping mechanism that allows you to save the contents of the system's memory for later analysis. It relies on <application>kexec</application>, which can be used to boot a Linux kernel from the context of another kernel without rebooting the system, and preserve the contents of the first kernel's memory that would otherwise be lost.
						</para>
						<para>
							In case of a system crash, <application>kexec</application> boots into a second kernel (a <firstterm>capture kernel</firstterm>). This capture kernel resides in a reserved part of the system memory that is inaccessible to the first kernel. <application>Kdump</application> then captures the contents of the crashed kernel's memory (a <firstterm>crash dump</firstterm>) and saves it to a specified location. The location cannot be configured using this Kickstart command; it must be configured after the installation by editing the <filename>/etc/kdump.conf</filename> configuration file.
						</para>
						<para>
							For more information about <application>Kdump</application>, see the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Kernel_Crash_Dump_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Kernel Crash Dump Guide</ulink>.
						</para>
						<para>
							Available options are:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--enable</option> - Enable kdump on the installed system.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--disable</option> - Disable kdump on the installed system.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--reserve-mb=</option> - The amount of memory you want to reserve for kdump, in MiB. For example:
								</para>
<screen>
<command>%addon com_redhat_kdump --enable --reserve-mb=128</command>
<command>%end</command>
</screen>
								<para>
									You can also specify <literal>auto</literal> instead of a numeric value. In that case, the installer will determine the amount of memory automatically based on the criteria described in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Kernel_Crash_Dump_Guide/appe-supported-kdump-configurations-and-targets.html#sect-kdump-memory-requirements">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Kernel Crash Dump Guide</ulink>.
								</para>
								<para>
									If you enable <application>kdump</application> and do not specify a <option>--reserve-mb=</option> option, the value <literal>auto</literal> will be used.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--enablefadump</option> - Enable firmware-assisted dumping on systems which allow it (notably, IBM Power&nbsp;Systems servers).
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>keyboard</command> (required)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>keyboard</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Sets one or more available keyboard layouts for the system.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--vckeymap=</option> - Specify a <systemitem>VConsole</systemitem> keymap which should be used. Valid names correspond to the list of files in the <filename class="directory">/usr/lib/kbd/keymaps/</filename> directory, without the <literal>.map.gz</literal> extension.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--xlayouts=</option> - Specify a list of <application>X</application> layouts that should be used as a comma-separated list without spaces. Accepts values in the same format as <systemitem>setxkbmap(1)</systemitem>, either in the <literal><replaceable>layout</replaceable></literal> format (such as <literal>cz</literal>), or in the <literal><replaceable>layout</replaceable> (<replaceable>variant</replaceable>)</literal> format (such as <literal>cz (qwerty)</literal>).
								</para>
								<para>
									All available layouts can be viewed on the <systemitem>xkeyboard-config(7)</systemitem> man page under <literal>Layouts</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--switch=</option> - Specify a list of layout-switching options (shortcuts for switching between multiple keyboard layouts). Multiple options must be separated by commas without spaces. Accepts values in the same format as <systemitem>setxkbmap(1)</systemitem>.
								</para>
								<para>
									Available switching options can be viewed on the <systemitem>xkeyboard-config(7)</systemitem> man page under <literal>Options</literal>.
								</para>
							</listitem>
						</itemizedlist>
						<para>
							The following example sets up two keyboard layouts (<literal>English (US)</literal> and <literal>Czech (qwerty)</literal>) using the <option>--xlayouts=</option> option, and allows to switch between them using <keycombo><keycap>Alt</keycap><keycap>Shift</keycap></keycombo>:
						</para>
<screen><command>keyboard --xlayouts=us,'cz (qwerty)' --switch=grp:alt_shift_toggle</command></screen>
						<important>
							<para>
								Either the <option>--vckeymap=</option> or the <option>--xlayouts=</option> option must be used.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>lang</command> (required)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>lang</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Sets the language to use during installation and the default language to use on the installed system. For example, to set the language to English, the Kickstart file should contain the following line:
						</para>
<screen><command>lang en_US</command></screen>
						<para>
							The file <filename>/usr/share/system-config-language/locale-list</filename> provides a list of the valid language codes in the first column of each line and is part of the <package>system-config-language</package> package.
						</para>
						<para>
							Certain languages (for example, Chinese, Japanese, Korean, and Indic languages) are not supported during text-mode installation. If you specify one of these languages with the <command>lang</command> command, the installation process continues in English, but the installed system uses your selection as its default language.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--addsupport=</option> - Add support for additional languages. Takes the form of comma-separated list without spaces. For example:
								</para>
<screen><command>lang en_US --addsupport=cs_CZ,de_DE,en_UK</command></screen>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>logging</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>logging</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Controls the error logging of <application>Anaconda</application> during installation. It has no effect on the installed system.
						</para>
<screen><command>logging [--host=<replaceable>host</replaceable>] [--port=<replaceable>port</replaceable>] [--level=debug|info|error|critical]</command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<option>--host=</option> - Send logging information to the given remote host, which must be running a syslogd process configured to accept remote logging.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--port=</option> - If the remote syslogd process uses a port other than the default, set it using this option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--level=</option> - Specify the minimum level of messages that appear on tty3. All messages are still sent to the log file regardless of this level, however. Possible values are <literal>debug</literal>, <literal>info</literal>, <literal>warning</literal>, <literal>error</literal>, or <literal>critical</literal>.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>logvol</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>logvol</command></secondary>
						</indexterm>
						<indexterm>
							<primary>LVM</primary>
							<secondary>with Kickstart</secondary>
						</indexterm>
						<indexterm>
							<primary>Kickstart installations</primary>
							<secondary>LVM</secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Create a logical volume for Logical Volume Management (LVM). For more information regarding LVM, see the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Logical_Volume_Manager_Administration/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Logical Volume Manager Administration</ulink> guide. This command uses the following syntax:
						</para>
<screen><command>logvol <replaceable>mntpoint</replaceable> --vgname=<replaceable>name</replaceable> --name=<replaceable>name</replaceable> [<replaceable>options</replaceable>]</command></screen>
						<note>
							<para>
								Do not use the dash (<literal>-</literal>) character in logical volume and volume group names when installing &PRODUCT; using Kickstart. If this character is used, the installation finishes normally, but the <filename class="directory">/dev/mapper/</filename> directory will list these volumes and volume groups with every dash doubled. For example, a volume group named <literal>volgrp-01</literal> containing a logical volume named <literal>logvol-01</literal> will be listed as <filename>/dev/mapper/volgrp--01-logvol--01</filename>.
							</para>
							<para>
								This limitation only applies to newly created logical volume and volume group names. If you are reusing existing ones using the <option>--noformat</option> option, their names will not be changed.
							</para>
						</note>
						<para>
							For a detailed example of <command>logvol</command> in action, see <xref linkend="sect-kickstart-partitioning-example"/>.
						</para>
						<itemizedlist>
							<listitem>
								<para>
									The <replaceable>mntpoint</replaceable> is where the partition is mounted and must be of one of the following forms:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<filename>/<replaceable>path</replaceable></filename>
										</para>
										<para>
											For example, <filename>/</filename> or <filename>/home</filename>
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>swap</literal>
										</para>
										<para>
											The partition is used as swap space.
										</para>
										<para>
											To determine the size of the swap partition automatically, use the <option>--recommended</option> option:
										</para>
<screen><literal>swap --recommended</literal></screen>
										<para>
											To determine the size of the swap partition automatically and also allow extra space for your system to hibernate, use the <option>--hibernation</option> option:
										</para>
<screen><literal>swap --hibernation</literal></screen>
										<para>
											The size assigned will be equivalent to the swap space assigned by <option>--recommended</option> plus the amount of RAM on your system.
										</para>
										<para>
											For the swap sizes assigned by these commands, see <xref linkend="sect-recommended-partitioning-scheme-x86"/> for AMD64 and Intel&nbsp;64 systems, <xref linkend="sect-recommended-partitioning-scheme-ppc"/> for IBM Power&nbsp;Systems servers, and <xref linkend="sect-recommended-partitioning-scheme-s390"/> for IBM System&nbsp;z.
										</para>
									</listitem>
								</itemizedlist>
							</listitem>
						</itemizedlist>
						<para>
							The options are as follows:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<option>--noformat</option> - Use an existing logical volume and do not format it.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--useexisting</option> - Use an existing logical volume and reformat it.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fstype=</option> - Sets the file system type for the logical volume. Valid values are <literal>xfs</literal>, <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>, <literal>swap</literal>, and <literal>vfat</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fsoptions=</option> - Specifies a free form string of options to be used when mounting the filesystem. This string will be copied into the <filename>/etc/fstab</filename> file of the installed system and should be enclosed in quotes.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--mkfsoptions=</option> - Specifies additional parameters to be passed to the program that makes a filesystem on this partition. No processing is done on the list of arguments, so they must be supplied in a format that can be passed directly to the <application>mkfs</application> program. This means multiple options should be comma-separated or surrounded by double quotes, depending on the filesystem.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--label=</option> - Sets a label for the logical volume.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--grow</option> - Tells the logical volume to grow to fill available space (if any), or up to the maximum size setting, if one is specified.  A minimum size must be given, using either the <option>--percent=</option> option or the <option>--size=</option> option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--size=</option> - The size of the logical volume in MiB. This option cannot be used together with the <option>--percent=</option> option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--percent=</option> - The size of the logical volume, as a percentage of the free space in the volume group after any statically-sized logical volumes are taken into account. This option cannot be used together with the <option>--size=</option> option.
								</para>
								<important>
									<para>
										When creating a new logical volume, you must either specify its size statically using the <option>--size=</option> option, or as a percentage of remaining free space using the <option>--percent=</option> option. You cannot use both of these options on the same logical volume.
									</para>
									<para>
										Note that this behavior is only applies to Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7.1 and later. In Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7.0, these two options interacted differently.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--maxsize=</option> - The maximum size in MiB when the logical volume is set to grow. Specify an integer value here such as <literal>500</literal> (do not include the unit).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--recommended</option> - Use this option when creating a <systemitem>swap</systemitem> logical volume to determine the size of this volume automatically, based on your system's hardware. For details about the recommended scheme, see <xref linkend="sect-recommended-partitioning-scheme-x86"/> for AMD64 and Intel&nbsp;64 systems, <xref linkend="sect-recommended-partitioning-scheme-ppc"/> for IBM Power&nbsp;Systems, and <xref linkend="sect-recommended-partitioning-scheme-s390"/> for IBM System&nbsp;z.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--resize</option> - Resize a logical volume. If you use this option, you must also specify <option>--useexisting</option> and <option>--size</option>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--encrypted</option> - Specifies that this logical volume should be encrypted, using the passphrase provided in the <option>--passphrase=</option> option. If you do not specify a passphrase, the installation program uses the default, system-wide passphrase set with the <command>autopart --passphrase</command> command, or stops the installation and prompts you to provide a passphrase if no default is set.
								</para>
								<note>
									<para>
										When encrypting one or more partitions, <application>Anaconda</application> attempts to gather 256 bits of entropy to ensure the partitions are encrypted securely. Gathering entropy can take some time - the process will stop after a maximum of 10 minutes, regardless of whether sufficient entropy has been gathered.
									</para>
									<para>
										The process can be sped up by interacting with the installation system (typing on the keyboard or moving the mouse). If you are installing in a virtual machine, you can also attach a virtio-rng device (a virtual random number generator) to the guest as described in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_device_configuration-Random_number_generator_device.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Virtualization Deployment and Administration Guide</ulink>.
									</para>
								</note>
							</listitem>
							<listitem>
								<para>
									<option>--passphrase=</option> - Specifies the passphrase to use when encrypting this logical volume. You must use this option together with the <option>--encrypted</option> option; it has no effect by itself.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--cipher=</option> - Specifies which type of encryption will be used if the <application>Anaconda</application> default aes-xts-plain64 is not satisfactory. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect. Available types of encryption are listed in the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Security Guide</ulink>, but Red&nbsp;Hat strongly recommends using either aes-xts-plain64 or aes-cbc-essiv:sha256.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--escrowcert=<replaceable>URL_of_X.509_certificate</replaceable></option> - Store data encryption keys of all encrypted volumes as files in <filename>/root</filename>, encrypted using the X.509 certificate from the URL specified with <replaceable>URL_of_X.509_certificate</replaceable>. The keys are stored as a separate file for each encrypted volume. This option is only meaningful if <option>--encrypted</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--backuppassphrase</option> - Add a randomly-generated passphrase to each encrypted volume. Store these passphrases in separate files in <filename>/root</filename>, encrypted using the X.509 certificate specified with <option>--escrowcert</option>. This option is only meaningful if <option>--escrowcert</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--thinpool</option> - Creates a thin pool logical volume. (Use a mount point of <literal>none</literal>)
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--metadatasize=<replaceable>size</replaceable></option> - Specify the metadata area size (in MiB) for a new thin pool device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--chunksize=<replaceable>size</replaceable></option> - Specify the chunk size (in KiB) for a new thin pool device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--thin</option> - Create a thin logical volume. (Requires use of <option>--poolname</option>)
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--poolname=<replaceable>name</replaceable></option> - Specify the name of the thin pool in which to create a thin logical volume. Requires the <option>--thin</option> option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--profile=<replaceable>name</replaceable></option> - Specify the configuration profile name to use with thin logical volumes. If used, the name will also be included in the metadata for the given logical volume. By default, the available profiles are <literal>default</literal> and <literal>thin-performance</literal> and are defined in the <filename class="directory">/etc/lvm/profile/</filename> directory. See the <systemitem>lvm(8)</systemitem> man page for additional information.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--cachepvs=</option> - A comma-separated list of physical volumes which should be used as a cache for this volume.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--cachemode=</option> - Specify which mode should be used to cache this logical volume - either <literal>writeback</literal> or <literal>writethrough</literal>.
								</para>
								<note>
									<para>
										For more information about cached logical volumes and their modes, see the <systemitem>lvmcache(7)</systemitem> man page.
									</para>
								</note>
							</listitem>
							<listitem>
								<para>
									<option>--cachesize=</option> - Size of cache attached to the logical volume, specified in MiB. This option requires the <option>--cachepvs=</option> option.
								</para>
							</listitem>
						</itemizedlist>
						<para>
							Create the partition first, create the logical volume group, and then create the logical volume. For example:
						</para>
<screen>
<command>part pv.01 --size 3000</command>
<command>volgroup myvg pv.01</command>
<command>logvol / --vgname=myvg --size=2000 --name=rootvol</command>
</screen>
						<para>
							Create the partition first, create the logical volume group, and then create the logical volume to occupy 90% of the remaining space in the volume group. For example:
						</para>
<screen>
<command>part pv.01 --size 1 --grow</command>
<command>volgroup myvg pv.01</command>
<command>logvol / --vgname=myvg --name=rootvol --percent=90</command>
</screen>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>mediacheck</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>mediacheck</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							If given, this command forces the installation program to perform a media check (<option>rd.live.check</option>) before starting the installation. This command requires that installations be attended, so it is disabled by default.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>network</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>network</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Configures network information for the target system and activates network devices in the installation environment. The device specified in the first <command>network</command> command is activated automatically. Activation of the device can be also explicitly required by the <option>--activate</option> option.
						</para>

						<note>
							<para>
								There are several types of network device naming standards used to identify network devices with persistent names such as <literal>em1</literal> or <literal>wl3sp0</literal>. For information about these standards, see the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/ch-Consistent_Network_Device_Naming.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Networking Guide</ulink>.
							</para>
						</note>


						<itemizedlist>
							<listitem>
								<para>
									<option>--activate</option> - activate this device in the installation environment.
								</para>
								<para>
									If you use the <option>--activate</option> option on a device that has already been activated (for example, an interface you configured with boot options so that the system could retrieve the Kickstart file) the device is reactivated to use the details specified in the Kickstart file.
								</para>
								<para>
									Use the <option>--nodefroute</option> option to prevent the device from using the default route.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--bootproto=</option> - One of <literal>dhcp</literal>, <literal>bootp</literal>, <literal>ibft</literal>, or <literal>static</literal>. The default option is <literal>dhcp</literal>; the <literal>dhcp</literal> and <literal>bootp</literal> options are treated the same. To disable <literal>ipv4</literal> configuration of the device, use <option>--noipv4</option> option.
								</para>
								<note>
									<para>
										This option configures ipv4 configuration of the device. For ipv6 configuration use --ipv6 and --ipv6gateway options.
									</para>
								</note>
								<para>
									The DHCP method uses a DHCP server system to obtain its networking configuration. The BOOTP method is similar, requiring a BOOTP server to supply the networking configuration. To direct a system to use DHCP:
								</para>
<screen><command>network --bootproto=dhcp</command></screen>
								<para>
									To direct a machine to use BOOTP to obtain its networking configuration, use the following line in the Kickstart file:
								</para>
<screen><command>network --bootproto=bootp</command></screen>
								<para>
									To direct a machine to use the configuration specified in iBFT, use:
								</para>
<screen><command>network --bootproto=ibft</command></screen>
								<para>
									The <literal>static</literal> method requires that you specify at least the IP address and netmask in the Kickstart file. This information is static and is used during and after the installation.
								</para>
								<para>
									All static networking configuration information must be specified on <emphasis>one</emphasis> line; you cannot wrap lines using a backslash (<literal>\</literal>) as you can on a command line.
								</para>
<screen><command>network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=10.0.2.1</command></screen>
								<para>
									You can also configure multiple nameservers at the same time. To do so, use the <option>--nameserver=</option> option once, and specify each of their IP addresses, separated by commas.
								</para>
<screen><command>network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=192.168.2.1,192.168.3.1</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--device=</option> - specifies the device to be configured (and eventually activated in <application>Anaconda</application>) with the <command>network</command> command.
								</para>
								<para>
									If the <option>--device=</option> option is missing on the <emphasis>first</emphasis> use of the <command>network</command> command, the value of the <option>ksdevice=</option> <application>Anaconda</application> boot option is used, if available. Note that this is considered deprecated behavior; in most cases, you should always specify a <option>--device=</option> for every <command>network</command> command.
								</para>
								<para>
									The behavior of any subsequent <command>network</command> command in the same Kickstart file is unspecified if its <option>--device=</option> option is missing. Make sure you specify this option for any <command>network</command> command beyond the first.
								</para>
								<para>
									You can specify a device to be activated in any of the following ways:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											the device name of the interface, for example, <systemitem>em1</systemitem>
										</para>
									</listitem>
									<listitem>
										<para>
											the MAC address of the interface, for example, <systemitem>01:23:45:67:89:ab</systemitem>
										</para>
									</listitem>
									<listitem>
										<para>
											the keyword <literal>link</literal>, which specifies the first interface with its link in the <literal>up</literal> state
										</para>
									</listitem>
									<listitem>
										<para>
											the keyword <literal>bootif</literal>, which uses the MAC address that <application>pxelinux</application> set in the <parameter>BOOTIF</parameter> variable. Set <literal>IPAPPEND 2</literal> in your <filename>pxelinux.cfg</filename> file to have <application>pxelinux</application> set the <parameter>BOOTIF</parameter> variable.
										</para>
									</listitem>
								</itemizedlist>
								<para>
									For example:
								</para>
<screen><command>network --bootproto=dhcp --device=em1</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--ip=</option> - IP address of the device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--ipv6=</option> - IPv6 address of the device, in the form of <replaceable>address</replaceable>[/<replaceable>prefix</replaceable> <replaceable>length</replaceable>] - for example, <literal>3ffe:ffff:0:1::1/128 </literal>. If <replaceable>prefix</replaceable> is omitted, <literal>64</literal> is used. You can also use <literal>auto</literal> for automatic configuration, or <literal>dhcp</literal> for DHCPv6-only configuration (no router advertisements).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--gateway=</option> - Default gateway as a single IPv4 address.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--ipv6gateway=</option> - Default gateway as a single IPv6 address.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nodefroute</option> - Prevents the interface being set as the default route. Use this option when you activate additional devices with the <option>--activate=</option> option, for example, a NIC on a separate subnet for an iSCSI target.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nameserver=</option> - DNS name server, as an IP address. To specify more than one name server, use this option once, and separate each IP address with a comma.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nodns</option> - Do not configure any DNS server.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--netmask=</option> - Network mask for the installed system.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--hostname=</option> - The host name for the installed system. The host name can either be a <firstterm>fully-qualified domain name</firstterm> (FQDN) in the format <literal><replaceable>host_name</replaceable>.<replaceable>domainname</replaceable></literal>, or a short host name with no domain. Many networks have a <firstterm>Dynamic Host Configuration Protocol</firstterm> (DHCP) service which automatically supplies connected systems with a domain name; to allow DHCP to assign the domain name, only specify a short host name.
								</para>
								<important>
									<para>
										If your network does <emphasis>not</emphasis> provide a DHCP service, always use the FQDN as the system's host name.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--ethtool=</option> - Specifies additional low-level settings for the network device which will be passed to the <application>ethtool</application> program.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--essid=</option> - The network ID for wireless networks.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--wepkey=</option> - The WEP encryption key for wireless networks.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--wpakey=</option> - The WPA encryption key for wireless networks.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--onboot=</option> - Whether or not to enable the device at boot time.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--dhcpclass=</option> - The DHCP class.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--mtu=</option> - The MTU of the device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--noipv4</option> - Disable IPv4 on this device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--noipv6</option> - Disable IPv6 on this device.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--bondslaves=</option> - When this option is used, the network device specified in the <option>--device=</option> option is created using slaves defined in the <option>--bondslaves=</option> option. For example:
								</para>
<screen><command>network --device=mynetwork --bondslaves=em1,em2</command></screen>
								<para>
									The above command creates a bond device named <literal>mynetwork</literal> using the <literal>em1</literal> and <literal>em2</literal> interfaces as its slaves.
								</para>
							</listitem>
							<listitem>
								<para>
									<command>--bondopts=</command> - a list of optional parameters for a bonded interface, which is specified using the <command>--bondslaves=</command> and <command>--device=</command> options. Options in this list must be separated by commas ("<literal>,</literal>") or semicolons ("<literal>;</literal>"). If an option itself contains a comma, use a semicolon to separate the options. For example:
								</para>
<screen><command>network --bondopts=mode=active-backup,balance-rr;primary=eth1</command></screen>
								<para>
									Available optional parameters are listed in the <citetitle>Working with Kernel Modules</citetitle> chapter of the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 System Administrator's Guide</ulink>.
								</para>
								<important>
									<para>
										The <option>--bondopts=mode=</option> parameter only supports full mode names such as <literal>balance-rr</literal> or <literal>broadcast</literal>, not their numerical representations such as <literal>0</literal> or <literal>3</literal>.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--vlanid=</option> - Specifies virtual LAN (VLAN) ID number (802.1q tag) for the device created using the device specified in <option>--device=</option> as a parent. For example, <command>network --device=em1 --vlanid=171</command> creates a virtual LAN device <literal>em1.171</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--interfacename=</option> - Specify a custom interface name for a virtual LAN device. This option should be used when the default name generated by the <option>--vlanid=</option> option is not desirable. This option must be used along with <option>--vlanid=</option>. For example:
								</para>
<screen><command>network --device=em1 --vlanid=171 --interfacename=vlan171</command></screen>
								<para>
									The above command creates a virtual LAN interface named <literal>vlan171</literal> on the <literal>em1</literal> device with an ID of <literal>171</literal>.
								</para>
								<para>
									The interface name can be arbitrary (for example, <literal>my-vlan</literal>), but in specific cases, the following conventions must be followed:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											If the name contains a dot (<literal>.</literal>), it must take the form of <literal><replaceable>NAME</replaceable>.<replaceable>ID</replaceable></literal>. The <replaceable>NAME</replaceable> is arbitrary, but the <replaceable>ID</replaceable> must be the VLAN ID. For example: <literal>em1.171</literal> or <literal>my-vlan.171</literal>.
										</para>
									</listitem>
									<listitem>
										<para>
											Names starting with <literal>vlan</literal> must take the form of <literal>vlan<replaceable>ID</replaceable></literal> - for example, <literal>vlan171</literal>.
										</para>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<para>
									<option>--teamslaves=</option> - Team device specified by the <option>--device=</option> option will be created using slaves specified in this option. Slaves are separated by commas. A slave can be followed by its configuration, which is a single-quoted JSON string with double quotes escaped by the <literal>\</literal> character. For example:
								</para>
<screen><command>network --teamslaves="p3p1'{\"prio\": -10, \"sticky\": true}',p3p2'{\"prio\": 100}'"</command></screen>
								<para>
									See also the <option>--teamconfig=</option> option.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--teamconfig=</option> - Double-quoted team device configuration which is a single-quoted JSON string with double quotes escaped by the <literal>\</literal> character. The device name is specified by <option>--device=</option> option and its slaves and their configuration by <option>--teamslaves=</option> option. For example:
								</para>
<screen><command>network --device team0 --activate --bootproto static --ip=10.34.102.222 --netmask=255.255.255.0 --gateway=10.34.102.254 --nameserver=10.34.39.2 --teamslaves="p3p1'{\"prio\": -10, \"sticky\": true}',p3p2'{\"prio\": 100}'" --teamconfig="{\"runner\": {\"name\": \"activebackup\"}}"</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--bridgeslaves=</option> - When this option is used, the network bridge with device name specified using the <option>--device=</option> option will be created and devices defined in the <option>--bridgeslaves=</option> option will be added to the bridge. For example:
								</para>
<screen><command>network --device=bridge0 --bridgeslaves=em1</command></screen>
							</listitem>
							<listitem>
								<para>
									<option>--bridgeopts=</option> - An optional comma-separated list of parameters for the bridged interface. Available values are <literal>stp</literal>, <literal>priority</literal>, <literal>forward-delay</literal>, <literal>hello-time</literal>, <literal>max-age</literal>, and <literal>ageing-time</literal>. For information about these parameters, see the <citetitle>bridge setting</citetitle> table in the <systemitem>nm-settings(5)</systemitem> man page or at <ulink url="https://developer.gnome.org/NetworkManager/0.9/ref-settings.html"/>.
								</para>
								<para>
									Also see the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/index.html">
									Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Networking Guide</ulink> for general information about network bridging.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>
						<command>%addon org_fedora_oscap</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>org_fedora_oscap</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							The OpenSCAP installer add-on is used to apply SCAP (Security Content Automation Protocol) content - security policies - on the installed system. This add-on has been enabled by default since &PRODUCT;&nbsp;7.2. When enabled, the packages necessary to provide this functionality will automatically be installed. However, by default, no policies are enforced, meaning that no checks are performed during or after installation unless specifically configured.
						</para>
						<important>
							<para>
								Applying a security policy is not necessary on all systems. This screen should only be used when a specific policy is mandated by your organization rules or government regulations.
							</para>
						</important>
						<para>
							Unlike most other commands, this add-on does not accept regular options, but uses key-value pairs in the body of the <command>%addon</command> definition instead. These pairs are whitespace-agnostic. Values can be optionally enclosed in single quotes (<literal>'</literal>) or double quotes (<literal>"</literal>).
						</para>
						<para>
							The following keys are recognized by the add-on:
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<literal>content-type</literal> - Type of the security content. Possible values are <literal>datastream</literal>, <literal>archive</literal>, <literal>rpm</literal>, and <literal>scap-security-guide</literal>.
								</para>
								<para>
									If the <literal>content-type</literal> is <literal>scap-security-guide</literal>, the add-on will use content provided by the <package>scap-security-guide</package> package, which is present on the boot media. This means that all other keys except <literal>profile</literal> will have no effect.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>content-url</literal> - Location of the security content. The content must be accessible using HTTP, HTTPS, or FTP; local storage is currently not supported. A network connection must be available to reach content definitions in a remote location.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>datastream-id</literal> - ID of the data stream referenced in the <literal>content-url</literal> value. Used only if <literal>content-type</literal> is <literal>datastream</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>xccdf-id</literal> - ID of the benchmark you want to use.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>xccdf-path</literal> - Path to the XCCDF file which should be used; given as a relative path in the archive.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>profile</literal> - ID of the profile to be applied. Use <literal>default</literal> to apply the default profile.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>fingerprint</literal> - A MD5, SHA1 or SHA2 checksum of the content referenced by <literal>content-url</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<literal>tailoring-path</literal> - Path to a tailoring file which should be used, given as a relative path in the archive.
								</para>
							</listitem>
						</itemizedlist>
						<para>
							The following is an example <command>%addon org_fedora_oscap</command> section which uses content from the <package>scap-security-guide</package> on the installation media:
						</para>
						<example id="exam-org-fedora-oscap-ssg">
							<title>Sample OpenSCAP Add-on Definition Using SCAP Security Guide</title>
<screen>
<command>%addon org_fedora_oscap</command>
content-type = scap-security-guide
profile = pci-dss
<command>%end</command>
</screen>
						</example>
						<para>
							The following is a more complex example which loads a custom profile from a web server:
						</para>
						<example id="exam-org-fedora-oscap-datastream">
							<title>Sample OpenSCAP Add-on Definition Using a Datastream</title>
<screen>
<command>%addon org_fedora_oscap</command>
content-type = datastream
content-url = http://www.example.com/scap/testing_ds.xml
datastream-id = scap_example.com_datastream_testing
xccdf-id = scap_example.com_cref_xccdf.xml
profile =  xccdf_example.com_profile_my_profile
fingerprint = 240f2f18222faa98856c3b4fc50c4195
<command>%end</command>
</screen>
						</example>
						<para>
							Additional information about the OpenSCAP installer add-on is available at <ulink url="https://www.open-scap.org/tools/oscap-anaconda-addon/"/>. For more information about the profiles available in the SCAP Security Guide and what they do, see the <ulink url="http://www.open-scap.org/security-policies/choosing-policy/">OpenSCAP Portal</ulink>.
						</para>
					</listitem>

				</varlistentry>

				<varlistentry>
					<term>
						<command>part</command> or <command>partition</command> (required)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>part</command></secondary>
						</indexterm>
						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>partition</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Creates a partition on the system.
						</para>
						<warning>
							<para>
								All partitions created are formatted as part of the installation process unless <option>--noformat</option> and <option>--onpart</option> are used.
							</para>
						</warning>

						<important>
							<para>
								Device names in the <literal>sd<replaceable>X</replaceable></literal> (or <literal>/dev/sd<replaceable>X</replaceable></literal>) format are not guaranteed to be consistent across reboots, which can complicate usage of some Kickstart commands. When a command calls for a device node name, you can instead use any item from <filename>/dev/disk</filename>. For example, instead of:
							</para>
<screen><command>part / --fstype=xfs --onpart=sda1</command></screen>
							<para>
								You could use an entry similar to one of the following:
							</para>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1</command></screen>
<screen><command>part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1</command></screen>
							<para>
								This way the command will always target the same storage device. This is especially useful in large storage environments. See the chapter about persistent storage device naming in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/persistent_naming.html"><citetitle>Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Storage Administration Guide</citetitle></ulink> for more in-depth information about different ways to consistently refer to storage devices.
							</para>
						</important>


						<para>
							For a detailed example of <command>part</command> in action, see <xref linkend="sect-kickstart-partitioning-example"/>.
						</para>

<screen><command>part|partition <replaceable>mntpoint</replaceable> --name=<replaceable>name</replaceable> --device=<replaceable>device</replaceable> --rule=<replaceable>rule</replaceable> [<replaceable>options</replaceable>]</command></screen>
						<itemizedlist>
							<listitem>
								<para>
									<replaceable>mntpoint</replaceable> - Where the partition is mounted. The value must be of one of the following forms:
								</para>
								<itemizedlist>
									<listitem>
										<para>
											<filename>/<replaceable>path</replaceable></filename>
										</para>
										<para>
											For example, <literal>/</literal>, <literal>/usr</literal>, <literal>/home</literal>
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>swap</literal>
										</para>
										<para>
											The partition is used as swap space.
										</para>
										<para>
											To determine the size of the swap partition automatically, use the <option>--recommended</option> option:
										</para>
<screen><literal>swap --recommended</literal></screen>
										<para>
											The size assigned will be effective but not precisely calibrated for your system.
										</para>
										<para>
											To determine the size of the swap partition automatically but also allow extra space for your system to hibernate, use the <option>--hibernation</option> option:
										</para>
<screen><literal>swap --hibernation</literal></screen>
										<para>
											The size assigned will be equivalent to the swap space assigned by <option>--recommended</option> plus the amount of RAM on your system.
										</para>
										<para>
											For the swap sizes assigned by these commands, see <xref linkend="sect-recommended-partitioning-scheme-x86"/> for AMD64 and Intel&nbsp;64 systems, <xref linkend="sect-recommended-partitioning-scheme-ppc"/> for IBM Power&nbsp;Systems servers, and <xref linkend="sect-recommended-partitioning-scheme-s390"/> for IBM System&nbsp;z.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>raid.<replaceable>id</replaceable></literal>
										</para>
										<para>
											The partition is used for software RAID (see <command>raid</command>).
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>pv.<replaceable>id</replaceable></literal>
										</para>
										<para>
											The partition is used for LVM (see <command>logvol</command>).
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>biosboot</literal>
										</para>
										<para>
											The partition will be used for a BIOS Boot partition. A 1 MiB BIOS boot partition is necessary on BIOS-based AMD64 and Intel&nbsp;64 systems using a <firstterm>GUID Partition Table</firstterm> (GPT); the boot loader will be installed into it. It is not necessary on UEFI systems. See also the <command>bootloader</command> command.
										</para>
									</listitem>
									<listitem>
										<para>
											<literal>/boot/efi</literal>
										</para>
										<para>
											An EFI System Partition. A 50 MiB EFI partition is necessary on UEFI-based AMD64 and Intel&nbsp;64 systems; the recommended size is 200 MiB. It is not necessary on BIOS systems. See also the <command>bootloader</command> command.
										</para>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<para>
									<option>--size=</option> - The minimum partition size in MiB. Specify an integer value here such as <literal>500</literal> (do not include the unit).
								</para>
								<important>
									<para>
										If the <option>--size</option> value is too small, the installation fails. Set the <option>--size</option> value as the minimum amount of space you require. For size recommendations, see <xref linkend="sect-recommended-partitioning-scheme-x86"/>.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--grow</option> - Tells the logical volume to grow to fill available space (if any), or up to the maximum size setting, if one is specified.
								</para>
								<note>
									<para>
										If you use <option>--grow=</option> without setting <option>--maxsize=</option> on a swap partition, <application>Anaconda</application> limits the maximum size of the swap partition. For systems that have less than 2&nbsp;GB of physical memory, the imposed limit is twice the amount of physical memory.  For systems with more than 2&nbsp;GB, the imposed limit is the size of physical memory plus 2GB.
									</para>
								</note>
							</listitem>
							<listitem>
								<para>
									<option>--maxsize=</option> - The maximum partition size in MiB when the partition is set to grow. Specify an integer value here such as <literal>500</literal> (do not include the unit).
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--noformat</option> - Specifies that the partition should not be formatted, for use with the <option>--onpart</option> command.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--onpart=</option> or <option>--usepart=</option> - Specifies the device on which to place the partition. For example:
								</para>
<screen><command>partition /home --onpart=hda1</command></screen>
								<para>
									puts <filename>/home</filename> on <filename>/dev/hda1</filename>.
								</para>
								<para>
									These options can also add a partition to a logical volume. For example:
								</para>
<screen><command>partition pv.1 --onpart=hda2</command></screen>
								<para>
									The device must already exist on the system; the <option>--onpart</option> option will not create it.
								</para>
								<para>
									It is also possible to specify an entire drive, rather than a partition, in which case <application>Anaconda</application> will format and use the drive without creating a partition table. Note, however, that installation of GRUB2 is not supported on a device formatted in this way, and must be placed on a drive with a partition table.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--ondisk=</option> or <option>--ondrive=</option> - Forces the partition to be created on a particular disk. For example, <option>--ondisk=sdb</option> puts the partition on the second SCSI disk on the system.
								</para>
								<para>
									To specify a multipath device that does not use <firstterm>logical volume management</firstterm> (LVM), use the format <literal>disk/by-id/dm-uuid-mpath-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to specify a disk with WWID <literal>2416CD96995134CA5D787F00A5AA11017</literal>, use:
								</para>
<screen><command>part / --fstype=xfs --grow --asprimary --size=8192 --ondisk=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017</command></screen>
								<para>
									Multipath devices that use LVM are not assembled until after <application>Anaconda</application> has parsed the Kickstart file. Therefore, you cannot specify these devices in the format <literal>dm-uuid-mpath</literal>. Instead, to specify a multipath device that uses LVM, use the format <literal>disk/by-id/scsi-<replaceable>WWID</replaceable></literal>, where <replaceable>WWID</replaceable> is the <firstterm>world-wide identifier</firstterm> for the device. For example, to specify a disk with WWID <literal>58095BEC5510947BE8C0360F604351918</literal>, use:
								</para>
<screen><command>part / --fstype=xfs --grow --asprimary --size=8192 --ondisk=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918</command></screen>
								<warning>
									<para>
										Never specify multipath devices by device names like <literal>mpatha</literal>. Device names such as this are not specific to a particular disk. The disk named <filename>/dev/mpatha</filename> during installation might not be the one that you expect it to be. Therefore, the <command>clearpart</command> command could target the wrong disk.
									</para>
								</warning>
							</listitem>
							<listitem>
								<para>
									Forces the partition to be allocated as a <emphasis>primary</emphasis> partition. If the partition cannot be allocated as primary (usually due to too many primary partitions being already allocated), the partitioning process fails. This option only makes sense when the disk uses a Master Boot Record (MBR); for GUID Partition Table (GPT)-labeled disks this option has no meaning. For information about primary (and extended) partitions, see <xref linkend="sect-disk-partitions-basics"/>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fsprofile=</option> - Specifies a <firstterm>usage type</firstterm> to be passed to the program that makes a filesystem on this partition. A usage type defines a variety of tuning parameters to be used when making a filesystem. For this option to work, the filesystem must support the concept of usage types and there must be a configuration file that lists valid types. For <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>, this configuration file is <filename>/etc/mke2fs.conf</filename>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--mkfsoptions=</option> - Specifies additional parameters to be passed to the program that makes a filesystem on this partition. This is similar to <option>--fsprofile</option> but works for all filesystems, not just the ones that support the profile concept. No processing is done on the list of arguments, so they must be supplied in a format that can be passed directly to the <application>mkfs</application> program. This means multiple options should be comma-separated or surrounded by double quotes, depending on the filesystem.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fstype=</option> - Sets the file system type for the partition. Valid values are <literal>xfs</literal>, <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>, <literal>swap</literal>, <literal>vfat</literal>, <literal>efi</literal> and <literal>biosboot</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--fsoptions</option> -  Specifies a free form string of options to be used when mounting the filesystem. This string will be copied into the <filename>/etc/fstab</filename> file of the installed system and should be enclosed in quotes.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--label=</option> - assign a label to an individual partition.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--recommended</option> - Determine the size of the partition automatically. For details about the recommended scheme, see <xref linkend="sect-recommended-partitioning-scheme-x86"/> for AMD64 and Intel&nbsp;64 systems, <xref linkend="sect-recommended-partitioning-scheme-ppc"/> for IBM Power&nbsp;Systems, and <xref linkend="sect-recommended-partitioning-scheme-s390"/> for IBM System&nbsp;z.
								</para>
								<important>
									<para>
										This option can only be used for partitions which result in a file system such as the <filename>/boot</filename> partition and <systemitem>swap</systemitem> space. It cannot be used to create LVM physical volumes or RAID members.
									</para>
								</important>
							</listitem>
							<listitem>
								<para>
									<option>--onbiosdisk</option> - Forces the partition to be created on a particular disk as discovered by the BIOS.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--encrypted</option> - Specifies that this partition should be encrypted, using the passphrase provided in the <option>--passphrase</option> option. If you do not specify a passphrase, <application>Anaconda</application> uses the default, system-wide passphrase set with the <command>autopart --passphrase</command> command, or stops the installation and prompts you to provide a passphrase if no default is set.
								</para>
								<note>
									<para>
										When encrypting one or more partitions, <application>Anaconda</application> attempts to gather 256 bits of entropy to ensure the partitions are encrypted securely. Gathering entropy can take some time - the process will stop after a maximum of 10 minutes, regardless of whether sufficient entropy has been gathered.
									</para>
									<para>
										The process can be sped up by interacting with the installation system (typing on the keyboard or moving the mouse). If you are installing in a virtual machine, you can also attach a virtio-rng device (a virtual random number generator) to the guest as described in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_device_configuration-Random_number_generator_device.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Virtualization Deployment and Administration Guide</ulink>.
									</para>
								</note>
							</listitem>
							<listitem>
								<para>
									<option>--passphrase=</option> - Specifies the passphrase to use when encrypting this partition. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--cipher=</option> - Specifies which type of encryption will be used if the <application>Anaconda</application> default <systemitem>aes-xts-plain64</systemitem> is not satisfactory. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect. Available types of encryption are listed in the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Security Guide</ulink>, but Red&nbsp;Hat strongly recommends using either <systemitem>aes-xts-plain64</systemitem> or <systemitem>aes-cbc-essiv:sha256</systemitem>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--escrowcert=<replaceable>URL_of_X.509_certificate</replaceable></option> - Store data encryption keys of all encrypted partitions as files in <filename>/root</filename>, encrypted using the X.509 certificate from the URL specified with <replaceable>URL_of_X.509_certificate</replaceable>. The keys are stored as a separate file for each encrypted partition. This option is only meaningful if <option>--encrypted</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--backuppassphrase</option> - Add a randomly-generated passphrase to each encrypted partition. Store these passphrases in separate files in <filename>/root</filename>, encrypted using the X.509 certificate specified with <option>--escrowcert</option>. This option is only meaningful if <option>--escrowcert</option> is specified.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--resize=</option> - Resize an existing partition. When using this option, specify the target size (in MiB) using the <option>--size=</option> option and the target partition using the <option>--onpart=</option> option.
								</para>
							</listitem>
						</itemizedlist>
						<note>
							<para>
								If partitioning fails for any reason, diagnostic messages appear on virtual console 3.
							</para>
						</note>
					</listitem>
				</varlistentry>











				<varlistentry>
					<term>
						<command>pwpolicy</command> (optional)
					</term>
					<listitem>


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>pwpolicy</command></secondary>
						</indexterm>


						<para>
							This command can be used to enforce a custom password policy, which specifies requirements for passwords created during installation, based on factors such as password length and strength.
						</para>
<screen><command>pwpolicy <replaceable>name</replaceable> [--minlen=<replaceable>length</replaceable>] [--minquality=<replaceable>quality</replaceable>] [--strict|--nostrict] [--emptyok|--noempty] [--changesok|--nochanges]</command></screen>
						<para>
							Replace <replaceable>name</replaceable> with either <literal>root</literal>, <literal>user</literal> or <literal>luks</literal> to enforce the policy for the <systemitem>root</systemitem> password, user passwords, or LUKS passphrase, respectively.
						</para>
						<para>
							The <systemitem>libpwquality</systemitem> library is used to check minimum password requirements (length and quality). You can use the <command>pwscore</command> and <command>pwmake</command> commands provided by the <package>libpwquality</package> package to check the quality score of a password, or to create a random password with a given score. See the <systemitem>pwscore(1)</systemitem> and <systemitem>pwmake(1)</systemitem> man page for details about these commands.
						</para>
						<important>
							<para>
								This command can only be used inside the <command>%anaconda</command> section.
							</para>
						</important>

						<itemizedlist>
							<listitem>
								<para>
									<option>--minlen=</option> - Sets the minimum allowed password length, in characters. The default is <literal>6</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--minquality=</option> - Sets the minimum allowed password quality as defined by the <systemitem>libpwquality</systemitem> library. The default value is <literal>1</literal>.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--strict</option> - Enables strict password enforcement. Passwords which do not meet the requirements specified in <option>--minquality=</option> and <option>--minlen=</option> will not be accepted. This option is disabled by default.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--notstrict</option> - Passwords which do <emphasis>not</emphasis> meet the minimum quality requirements specified by the <option>--minquality=</option> and <option>-minlen=</option> options will be allowed, after <guilabel>Done</guilabel> is clicked twice.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--emptyok</option> - Allows the use of empty passwords. Enabled by default for user passwords.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--notempty</option> - Disallows the use of empty passwords. Enabled by default for the root password and the LUKS passphrase.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--changesok</option> - Allows changing the password in the user interface, even if the Kickstart file already specifies a password. Disabled by default.
								</para>
							</listitem>
							<listitem>
								<para>
									<option>--nochanges</option> - Disallows changing passwords which are already set in the Kickstart file. Enabled by default.
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>
						<command>poweroff</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>poweroff</command></secondary>
						</indexterm>


					</term>
					<listitem>
						<para>
							Shut down and power off the system after the installation has successfully completed. Normally during a manual installation, <application>Anaconda</application> displays a message and waits for the user to press a key before rebooting. During a Kickstart installation, if no completion method is specified, the <command>halt</command> option is used as default.
						</para>
						<para>
							The <command>poweroff</command> option is equivalent to the <command>shutdown -p</command> command.
						</para>
						<note>
							<para>
								The <command>poweroff</command> command is highly dependent on the system hardware in use. Specifically, certain hardware components such as the BIOS, APM (advanced power management), and ACPI (advanced configuration and power interface) must be able to interact with the system kernel. Consult your hardware documentation for more information on you system's APM/ACPI abilities.
							</para>
						</note>
						<para>
							For other completion methods, see the <command>halt</command>, <command>reboot</command>, and <command>shutdown</command> Kickstart commands.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<command>raid</command> (optional)


						<indexterm>
							<primary>Kickstart file</primary>
							<secondary><command>raid</command>
						</secondary>
					</indexterm>
					<indexterm>
						<primary>RAID</primary>
						<secondary>Kickstart installations</secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Assembles a software RAID device. This command is of the form:
					</para>
<screen><command>raid <replaceable>mntpoint</replaceable> --level=<replaceable>level</replaceable> --device=<replaceable>device-name</replaceable> <replaceable>partitions*</replaceable></command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<replaceable>mntpoint</replaceable> - Location where the RAID file system is mounted. If it is <filename>/</filename>, the RAID level must be 1 unless a boot partition (<filename>/boot</filename>) is present. If a boot partition is present, the <filename>/boot</filename> partition must be level 1 and the root (<filename>/</filename>) partition can be any of the available types. The <replaceable>partitions*</replaceable> (which denotes that multiple partitions can be listed) lists the RAID identifiers to add to the RAID array.
							</para>
							<important>
								<para>
									On IBM Power&nbsp;Systems, if a RAID device has been prepared and has not been reformatted during the installation, ensure that the RAID metadata version is <literal>0.90</literal> if you intend to put the <filename>/boot</filename> and <filename>PReP</filename> partitions on the RAID device.
								</para>
								<para>
									The default &PRODUCT;&nbsp;7 <application>mdadm</application> metadata version is not supported for the boot device.
								</para>
							</important>
							<para>
								For a detailed example of <command>raid</command> in action, see <xref linkend="sect-kickstart-partitioning-example"/>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--level=</option> - RAID level to use (0, 1, 4, 5, 6, or 10). See <xref linkend="sect-create-software-raid-x86"/> for information about various available RAID levels.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--device=</option> - Name of the RAID device to use - for example, <option>--device=root</option>.
							</para>
							<important>
								<para>
									Do not use <systemitem>mdraid</systemitem> names in the form of <literal>md0</literal> - these names are not guaranteed to be persistent. Instead, use meaningful names such as <literal>root</literal> or <literal>swap</literal>. Using meaningful names creates a symbolic link from <filename>/dev/md/<replaceable>name</replaceable></filename> to whichever <filename>/dev/md<replaceable>X</replaceable></filename> node is assigned to the array.
								</para>
								<para>
									If you have an old (v0.90 metadata) array that you cannot assign a name to, you can specify the array by a filesystem label or UUID (for example, <option>--device=rhel7-root --label=rhel7-root</option>).
								</para>
							</important>
						</listitem>
						<listitem>
							<para>
								<option>--chunksize=</option> - Sets the chunk size of a RAID storage in KiB. In certain situations, using a different chunk size than the default (<option>512 Kib</option>) can improve the performance of the RAID.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--spares=</option> - Specifies the number of spare drives allocated for the RAID array. Spare drives are used to rebuild the array in case of drive failure.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--fsprofile=</option> - Specifies a <firstterm>usage type</firstterm> to be passed to the program that makes a filesystem on this partition. A usage type defines a variety of tuning parameters to be used when making a filesystem. For this option to work, the filesystem must support the concept of usage types and there must be a configuration file that lists valid types. For ext2, ext3, and ext4, this configuration file is <filename>/etc/mke2fs.conf</filename>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--fstype=</option> - Sets the file system type for the RAID array. Valid values are <literal>xfs</literal>, <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>, <literal>swap</literal>, and <literal>vfat</literal>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--fsoptions=</option> - Specifies a free form string of options to be used when mounting the filesystem. This string will be copied into the <filename>/etc/fstab</filename> file of the installed system and should be enclosed in quotes.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--mkfsoptions=</option> - Specifies additional parameters to be passed to the program that makes a filesystem on this partition. No processing is done on the list of arguments, so they must be supplied in a format that can be passed directly to the <application>mkfs</application> program. This means multiple options should be comma-separated or surrounded by double quotes, depending on the filesystem.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--label=</option> - Specify the label to give to the filesystem to be made. If the given label is already in use by another filesystem, a new label will be created.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--noformat</option> - Use an existing RAID device and do not format the RAID array.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--useexisting</option> - Use an existing RAID device and reformat it.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--encrypted</option> - Specifies that this RAID device should be encrypted, using the passphrase provided in the <option>--passphrase</option> option. If you do not specify a passphrase, <application>Anaconda</application> uses the default, system-wide passphrase set with the <command>autopart --passphrase</command> command, or stops the installation and prompts you to provide a passphrase if no default is set.
							</para>
							<note>
								<para>
									When encrypting one or more partitions, <application>Anaconda</application> attempts to gather 256 bits of entropy to ensure the partitions are encrypted securely. Gathering entropy can take some time - the process will stop after a maximum of 10 minutes, regardless of whether sufficient entropy has been gathered.
								</para>
								<para>
									The process can be sped up by interacting with the installation system (typing on the keyboard or moving the mouse). If you are installing in a virtual machine, you can also attach a virtio-rng device (a virtual random number generator) to the guest as described in the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_device_configuration-Random_number_generator_device.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Virtualization Deployment and Administration Guide</ulink>.
								</para>
							</note>
						</listitem>
						<listitem>
							<para>
								<option>--cipher=</option> - Specifies which type of encryption will be used if the <application>Anaconda</application> default aes-xts-plain64 is not satisfactory. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect. Available types of encryption are listed in the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Security Guide</ulink>, but Red&nbsp;Hat strongly recommends using either aes-xts-plain64 or aes-cbc-essiv:sha256.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--passphrase=</option> - Specifies the passphrase to use when encrypting this RAID device. You must use this option together with the <option>--encrypted</option> option; by itself it has no effect.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--escrowcert=<replaceable>URL_of_X.509_certificate</replaceable></option> - Store the data encryption key for this device in a file in <filename>/root</filename>, encrypted using the X.509 certificate from the URL specified with <replaceable>URL_of_X.509_certificate</replaceable>. This option is only meaningful if <option>--encrypted</option> is specified.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--backuppassphrase</option> - Add a randomly-generated passphrase to this device. Store the passphrase in a file in <filename>/root</filename>, encrypted using the X.509 certificate specified with <option>--escrowcert</option>. This option is only meaningful if <option>--escrowcert</option> is specified.
							</para>
						</listitem>
					</itemizedlist>
					<para>
						The following example shows how to create a RAID level 1 partition for <filename>/</filename>, and a RAID level 5 for <filename>/home</filename>, assuming there are three SCSI disks on the system. It also creates three swap partitions, one on each drive.
					</para>
					<example>
						<title>Using the raid Kickstart command</title>
<screen>
<command>part raid.01 --size=6000 --ondisk=sda</command>
<command>part raid.02 --size=6000 --ondisk=sdb</command>
<command>part raid.03 --size=6000 --ondisk=sdc</command>

<command>part swap --size=512 --ondisk=sda</command>
<command>part swap --size=512 --ondisk=sdb</command>
<command>part swap --size=512 --ondisk=sdc</command>

<command>part raid.11 --size=1 --grow --ondisk=sda</command>
<command>part raid.12 --size=1 --grow --ondisk=sdb</command>
<command>part raid.13 --size=1 --grow --ondisk=sdc</command>

<command>raid / --level=1 --device=rhel7-root --label=rhel7-root raid.01 raid.02 raid.03</command>
<command>raid /home --level=5 --device=rhel7-home --label=rhel7-home raid.11 raid.12 raid.13</command>
</screen>
					</example>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>realm</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>realm</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Join an Active Directory or IPA domain. For more information about this command, see the <literal>join</literal> section of the <systemitem>realm(8)</systemitem> man page.
					</para>
<screen><command>realm join [<replaceable>options</replaceable>] <replaceable>domain</replaceable></command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--computer-ou=OU=</option> - Provide the distinguished name of an organizational unit in order to create the computer account. The exact format of the distinguished name depends on the client software and membership software. The root DSE portion of the distinguished name can usually be left out.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--no-password</option> - Join automatically without a password.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--one-time-password=</option> - Join using a one-time password. This is not possible with all types of realm.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--client-software=</option> - Only join realms which can run this client software. Valid values include <literal>sssd</literal> and <literal>winbind</literal>. Not all realms support all values. By default, the client software is chosen automatically.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--server-software=</option> - Only join realms which can run this server software. Possible values include <literal>active-directory</literal> or <literal>freeipa</literal>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--membership-software=</option> - Use this software when joining the realm. Valid values include <literal>samba</literal> and <literal>adcli</literal>. Not all realms support all values. By default, the membership software is chosen automatically.
							</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>reboot</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>reboot</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Reboot after the installation is successfully completed (no arguments). Normally, Kickstart displays a message and waits for the user to press a key before rebooting.
					</para>
					<para>
						The <command>reboot</command> option is equivalent to the <command>shutdown -r</command> command.
					</para>
					<para>
						Specify <command>reboot</command> to automate installation fully when installing in command line mode on System&nbsp;z.
					</para>
					<para>
						For other completion methods, see the <command>halt</command>, <command>poweroff</command>, and <command>shutdown</command> Kickstart options.
					</para>
					<para>
						The <command>halt</command> option is the default completion method if no other methods are explicitly specified in the Kickstart file.
					</para>
					<note>
						<para>
							Use of the <command>reboot</command> option <emphasis>might</emphasis> result in an endless installation loop, depending on the installation media and method.
						</para>
					</note>
					<itemizedlist>
						<listitem>
							<para>
								<command>--eject</command> - Attempt to eject the installation DVD (if installing from a DVD) before rebooting.
							</para>
						</listitem>
						<listitem>
							<para>
								<command>--kexec</command> - Uses the <application>kexec</application> system call instead of performing a full reboot, which immediately loads the installed system into memory, bypassing the hardware initialization normally performed by the BIOS or firmware.
							</para>
							<important>
								<para>
									Due to the complexities involved with booting systems using <application>kexec</application>, it cannot be explicitly tested and guaranteed to function in every situation.
								</para>
								<para>
									When <application>kexec</application> is used, device registers (which would normally be cleared during a full system reboot) might stay filled with data, which could potentially create issues for some device drivers.
								</para>
							</important>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>repo</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary>installation source</secondary>
					</indexterm>
					<indexterm>
						<primary>Kickstart file</primary>
						<secondary>repository configuration</secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Configures additional <application>yum</application> repositories that can be used as sources for package installation. You can add multiple <command>repo</command> lines.
					</para>
<screen><command>repo --name=<replaceable>repoid</replaceable> [--baseurl=<replaceable>&lt;url&gt;</replaceable>|--mirrorlist=<replaceable>url</replaceable>] [<replaceable>options</replaceable>]</command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--name=</option> - The repository id. This option is required. If a repository has a name which conflicts with another previously added repository, it is ignored. Because the installation program uses a list of preset repositories, this means that you cannot add repositories with the same names as the preset ones.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--baseurl=</option> - The URL to the repository. The variables that can be used in yum repo config files are not supported here. This option cannot be used together with the <option>--mirrorlist</option> option in the same repository definition.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--mirrorlist=</option> - The URL pointing at a list of mirrors for the repository. The variables that can be used in yum repository configuration files are not supported here. This option cannot be used together with the <option>--baseurl</option> option in the same repository definition.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--install</option> - Save the provided repository configuration on the installed system in the <filename>/etc/yum.repos.d/</filename> directory. Without using this option, a repository configured in a Kickstart file will only be available during the installation process, not on the installed system.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--cost=</option> - An integer value to assign a cost to this repository. If multiple repositories provide the same packages, this number is used to prioritize which repository will be used before another. Repositories with a lower cost take priority over repositories with higher cost.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--excludepkgs=</option> - A comma-separated list of package names that must <emphasis>not</emphasis> be pulled from this repository. This is useful if multiple repositories provide the same package and you want to make sure it comes from a particular repository. Both full package names (such as <literal>publican</literal>) and globs (such as <literal>gnome-*</literal>) are accepted.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--includepkgs=</option> - A comma-separated list of package names and globs that must be pulled from this repository. This is useful if multiple repositories provide the same package and you want to make sure it comes from this repository.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--proxy=[<replaceable>protocol</replaceable>://][<replaceable>username</replaceable>[:<replaceable>password</replaceable>]@]<replaceable>host</replaceable>[:<replaceable>port</replaceable>]</option> - Specify an HTTP/HTTPS/FTP proxy to use just for this repository. This setting does not affect any other repositories, nor how the <filename>install.img</filename> is fetched on HTTP installations.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--ignoregroups=true</option> - This option is used when composing installation trees and has no effect on the installation process itself. It tells the compose tools to not look at the package group information when mirroring trees so as to avoid mirroring large amounts of unnecessary data.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--noverifyssl</option> - Disable SSL verification when connecting to an <systemitem>HTTPS</systemitem> server.
							</para>
						</listitem>
					</itemizedlist>
					<important>
						<para>
							Repositories used for installation must be stable. The installation can fail if a repository is modified before the installation concludes.
						</para>
					</important>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>rescue</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>rescue</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Automatically enters the installation program's rescue mode. This gives you a chance to repair the system in case of any problems.
					</para>
<screen><command>rescue [--nomount|--romount]</command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--nomount</option> or <option>--romount</option> - Controls how the installed system is mounted in the rescue environment. By default, the installation program finds your system and mount it in read-write mode, telling you where it has performed this mount. You can optionally select to not mount anything (the <option>--nomount</option> option) or mount in read-only mode (the <option>--romount</option> option). Only one of these two options can be used.
							</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>reqpart</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>creating required partitions</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Automatically creates partitions required by your hardware platform.  These include a <filename class="partition">/boot/efi</filename> partition for systems with UEFI firmware, a <filename class="partition">biosboot</filename> partition for systems with BIOS firmware and GPT, and a <filename class="partition">PRePBoot</filename> partition for IBM Power Systems.
					</para>
<screen><command>reqpart [--add-boot]</command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--add-boot</option> - Creates a separate <filename class="partition">/boot</filename> partition in addition to the platform-specific partition created by the base command.
							</para>
						</listitem>
					</itemizedlist>
					<note>
						<para>
							This command cannot be used toegether with <command>autopart</command>, because <command>autopart</command> does everything the  <command>reqpart</command> command does and, in addition, creates other partitions or logical volumes such as <filename class="partition">/</filename> and <filename class="partition">swap</filename>.  In contrast with <command>autopart</command>, this command only creates platform-specific partitions and leaves the rest of the drive empty, allowing you to create a custom layout.
						</para>
					</note>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>rootpw</command> (required)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>rootpw</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Sets the system's root password to the <replaceable>password</replaceable> argument.
					</para>
<screen><command>rootpw [--iscrypted|--plaintext] [--lock] <replaceable>password</replaceable></command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--iscrypted</option> - If this option is present, the password argument is assumed to already be encrypted. This option is mutually exclusive with <option>--plaintext</option>. To create an encrypted password, you can use <application>python</application>:
							</para>
<screen><prompt>$</prompt> <command>python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'</command></screen>
							<para>
								This generates a sha512 crypt-compatible hash of your password using a random salt.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--plaintext</option> - If this option is present, the password argument is assumed to be in plain text. This option is mutually exclusive with <option>--iscrypted</option>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--lock</option> - If this option is present, the root account is locked by default. This means that the root user will not be able to log in from the console. This option will also disable the <guilabel>Root Password</guilabel> screens in both the graphical and text-based manual installation.
							</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>selinux</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>selinux</command></secondary>
					</indexterm>


				</term>
				<listitem>
					<para>
						Sets the state of SELinux on the installed system. The default SELinux policy is <literal>enforcing</literal>.
					</para>
<screen><command>selinux [--disabled|--enforcing|--permissive]</command></screen>
					<itemizedlist>
						<listitem>
							<para>
								<option>--enforcing</option> - Enables SELinux with the default targeted policy being <literal>enforcing</literal>.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--permissive</option> - Outputs warnings based on the SELinux policy, but does not actually enforce the policy.
							</para>
						</listitem>
						<listitem>
							<para>
								<option>--disabled</option> - Disables SELinux completely on the system.
							</para>
						</listitem>
					</itemizedlist>
					<para>
						For more information regarding SELinux, see the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 SELinux User's and Administrator's Guide</ulink>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<command>services</command> (optional)


					<indexterm>
						<primary>Kickstart file</primary>
						<secondary><command>services</command>
					</secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Modifies the default set of services that will run under the default <application>systemd</application> target. The list of disabled services is processed before the list of enabled services. Therefore, if a service appears on both lists, it will be enabled.
				</para>
<screen><command>services [--disabled=<replaceable>list</replaceable>] [--enabled=<replaceable>list</replaceable>]</command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--disabled=</option> - Disable the services given in the comma separated list.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--enabled=</option> - Enable the services given in the comma separated list.
						</para>
					</listitem>
				</itemizedlist>
				<important>
					<para>
						Do not include spaces in the list of services. If you do, Kickstart will enable or disable only the services up to the first space. For example:
					</para>
<screen><command>services --disabled=auditd, cups,smartd, nfslock</command></screen>
					<para>
						disables only the <systemitem>auditd</systemitem> service. To disable all four services, this entry should include no spaces:
					</para>
<screen><command>services --disabled=auditd,cups,smartd,nfslock</command></screen>
				</important>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>shutdown</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>shutdown</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Shut down the system after the installation has successfully completed. During a Kickstart installation, if no completion method is specified, the <command>halt</command> command is used.
				</para>
				<para>
					The <command>shutdown</command> Kickstart option is equivalent to the <command>shutdown</command> command.
				</para>
				<para>
					For other completion methods, see the <command>halt</command>, <command>poweroff</command>, and <command>reboot</command> Kickstart options.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>skipx</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>skipx</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					If present, <application>X</application> is not configured on the installed system.
				</para>
				<important>
					<para>
						If you install a display manager among your package selection options, this package creates an <application>X</application> configuration, and the installed system defaults to <systemitem>graphical.target</systemitem>. The effect of the <command>skipx</command> option is overridden.
					</para>
				</important>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>snapshot</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>snapshot</command></secondary>
				</indexterm>

			</term>
			<listitem>
				<para>
					Using the <command>snapshot</command> command, you can create LVM thin volume snapshots during the installation process. This enables you to back up a logical volume before or after the installation.
				</para>
				<para>
					To create multiple snapshots, add the <command>snaphost</command> Kickstart command multiple times.
				</para>
<screen>snapshots <replaceable>vg_name/lv_name</replaceable> --name=<replaceable>snapshot_name</replaceable> --when=<replaceable>pre-install|post-install</replaceable></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option><replaceable>vg_name</replaceable>/<replaceable>lv_name</replaceable></option> - Sets the name of the volume group and logical volume to create the snapshot from.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--name=<replaceable>snapshot_name</replaceable></option> - Sets the name of the snapshot. This name must be unique within the volume group.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--when=<replaceable>pre-install|post-install</replaceable></option> - Sets if the snapshot is created before the installation begins or after the installation is completed.
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>sshpw</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>sshpw</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					During the installation, you can interact with the installation program and monitor its progress over an <systemitem>SSH</systemitem> connection. Use the <command>sshpw</command> command to create temporary accounts through which to log on. Each instance of the command creates a separate account that exists only in the installation environment. These accounts are not transferred to the installed system.
				</para>
<screen><command>sshpw --username=<replaceable>name</replaceable> <replaceable>password</replaceable> [--iscrypted|--plaintext] [--lock]</command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--username</option> - Provides the name of the user. This option is required.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--iscrypted</option> - If this option is present, the password argument is assumed to already be encrypted. This option is mutually exclusive with <option>--plaintext</option>. To create an encrypted password, you can use <application>python</application>:
						</para>
<screen><prompt>$</prompt> <command>python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'</command></screen>
						<para>
							This generates a sha512 crypt-compatible hash of your password using a random salt.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--plaintext</option> - If this option is present, the password argument is assumed to be in plain text. This option is mutually exclusive with <option>--iscrypted</option>
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--lock</option> - If this option is present, this account is locked by default. This means that the user will not be able to log in from the console.
						</para>
					</listitem>
				</itemizedlist>
				<important>
					<para>
						By default, the <systemitem>ssh</systemitem> server is not started during the installation. To make <systemitem>ssh</systemitem> available during the installation, boot the system with the kernel boot option <option>inst.sshd</option>. See <xref linkend="list-boot-options-display"/> for details.
					</para>
				</important>
				<note>
					<para>
						If you want to disable root <systemitem>ssh</systemitem> access, while allowing another user <systemitem>ssh</systemitem> access, use the following:
					</para>
<screen><command>sshpw --username=<replaceable>example_username</replaceable> <replaceable>example_password</replaceable> --plaintext</command>
<command>sshpw --username=root <replaceable>example_password</replaceable> --lock</command></screen>
					<para>
						To simply disable root <systemitem>ssh</systemitem> access, use the following:
					</para>
<screen><command>sshpw --username=root --lock</command></screen>
				</note>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>text</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>text</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Perform the Kickstart installation in text mode. Kickstart installations are performed in graphical mode by default.
				</para>
				<important>
					<para>
						For a fully automatic installation, you must either specify one of the available modes (<command>graphical</command>, <command>text</command>, or <command>cmdline</command>) in the Kickstart file, or you must use the <option>console=</option> boot option as described in <xref linkend="list-boot-options-display"/>. If no mode is specified, the system will prompt you to choose one before continuing.
					</para>
				</important>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>timezone</command> (required)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>timezone</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Sets the system time zone to <replaceable>timezone</replaceable>. To view a list of available time zones, use the <command>timedatectl list-timezones</command> command.
				</para>
<screen><command>timezone <replaceable>timezone</replaceable> [<replaceable>options</replaceable>]</command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--utc</option> - If present, the system assumes the hardware clock is set to UTC (Greenwich Mean) time.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--nontp</option> - Disable the NTP service automatic starting.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--ntpservers=</option> - Specify a list of NTP servers to be used as a comma-separated list without spaces.
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>unsupported_hardware</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>unsupported_hardware</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Tells the installation program to suppress the <guilabel>Unsupported Hardware Detected</guilabel> alert. If this command is not included and unsupported hardware is detected, the installation stalls at this alert.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry id="varlist-kickstart-user-options">
			<term>
				<command>user</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>user</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Creates a new user on the system.
				</para>
<screen><command>user --name=<replaceable>username</replaceable> [<replaceable>options</replaceable>]</command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--name=</option> - Provides the name of the user. This option is required.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--gecos=</option> - Provides the GECOS information for the user. This is a string of various system-specific fields separated by a comma. It is frequently used to specify the user's full name, office number, and so on. See the <systemitem>passwd(5)</systemitem> man page for more details.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--groups=</option> - In addition to the default group, a comma separated list of group names the user should belong to. The groups must exist before the user account is created. See the <command>group</command> command.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--homedir=</option> - The home directory for the user. If not provided, this defaults to <filename>/home/<replaceable>username</replaceable></filename>.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--lock</option> - If this option is present, this account is locked by default. This means that the user will not be able to log in from the console. This option will also disable the <guilabel>Create User</guilabel> screens in both the graphical and text-based manual installation.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--password=</option> - The new user's password. If not provided, the account will be locked by default.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--iscrypted</option> - If this option is present, the password argument is assumed to already be encrypted. This option is mutually exclusive with <option>--plaintext</option>. To create an encrypted password, you can use <application>python</application>:
						</para>
<screen><prompt>$</prompt> <command>python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'</command></screen>
						<para>
							This generates a sha512 crypt-compatible hash of your password using a random salt.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--plaintext</option> - If this option is present, the password argument is assumed to be in plain text. This option is mutually exclusive with <option>--iscrypted</option>
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--shell=</option> - The user's login shell. If not provided, the system default is used.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--uid=</option> - The user's <firstterm>UID</firstterm> (User ID). If not provided, this defaults to the next available non-system UID.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--gid=</option> - The <firstterm>GID</firstterm> (Group ID) to be used for the user's group. If not provided, this defaults to the next available non-system group ID.
						</para>
						<note>
							<para>
								Consider using the <option>--uid</option> and <option>--gid</option> options to set IDs of regular users and their default groups at range starting at <literal>5000</literal> instead of <literal>1000</literal>. That is because the range reserved for system users and groups, <literal>0</literal>-<literal>999</literal>, might increase in the future and thus overlap with IDs of regular users.
							</para>
							<para>
								For changing the minimum UID and GID limits after the installation, which ensures that your chosen UID and GID ranges are applied automatically on user creation, see <ulink url="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-managing_users_and_groups#s1-users-groups-introduction">the Users and Groups chapter of the System Administrator's Guide</ulink>.
							</para>
						</note>
					</listitem>
				</itemizedlist>
				<note>
					<para>
						Files and directories are created with various permissions, dictated by the application used to create the file or directory. For example, the <command>mkdir</command> command creates directories with all permissions enabled. However, applications are prevented from granting certain permissions to newly created files, as specified by the <literal>user file-creation mask</literal> setting.
					</para>
					<para>
						The <literal>user file-creation mask</literal> can be controlled with the <command>umask</command> command. The default setting of the <literal>user file-creation mask</literal> for new users is defined by the <literal>UMASK</literal> variable in the <filename>/etc/login.defs</filename> configuration file on the installed system. If unset, it defaults to <literal>022</literal>. This means that by default when an application creates a file, it is prevented from granting write permission to users other than the owner of the file. However, this can be overridden by other settings or scripts. More information can be found in the <ulink url="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html">Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 System Administrator's Guide</ulink>.
					</para>
				</note>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>vnc</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>vnc</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Allows the graphical installation to be viewed remotely through VNC. This method is usually preferred over text mode, as there are some size and language limitations in text installations. With no additional options, this command starts a VNC server on the installation system with no password and displays the details required to connect to it.
				</para>
<screen><command>vnc [--host=<replaceable>host_name</replaceable>] [--port=<replaceable>port</replaceable>] [--password=<replaceable>password</replaceable>]</command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--host=</option> - Connect to the VNC viewer process listening on the given host name.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--port=</option> - Provide a port that the remote VNC viewer process is listening on. If not provided, <application>Anaconda</application> uses the VNC default port of 5900.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--password=</option> - Set a password which must be provided to connect to the VNC session. This is optional, but recommended.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					For more information about VNC installations, including instructions on how to connect to the installation system, see <xref linkend="chap-vnc-installations"/>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>volgroup</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>volgroup</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Creates a Logical Volume Management (LVM) group.
				</para>
<screen><command>volgroup <replaceable>name</replaceable> <replaceable>partition</replaceable> [<replaceable>options</replaceable>]</command></screen>
				<important>
					<para>
						Do not use the dash (<literal>-</literal>) character in logical volume and volume group names when installing &PRODUCT; using Kickstart. If this character is used, the installation finishes normally, but the <filename class="directory">/dev/mapper/</filename> directory will list these volumes and volume groups with every dash doubled. For example, a volume group named <literal>volgrp-01</literal> containing a logical volume named <literal>logvol-01</literal> will be listed as <filename>/dev/mapper/volgrp--01-logvol--01</filename>.
					</para>
					<para>
						This limitation only applies to newly created logical volume and volume group names. If you are reusing existing ones using the <option>--noformat</option> option, their names will not be changed.
					</para>
				</important>
				<para>
					For a detailed partitioning example including <command>volgroup</command>, see <xref linkend="sect-kickstart-partitioning-example"/>.
				</para>
				<para>
					The options are as follows:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<option>--noformat</option> - Use an existing volume group and do not format it.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--useexisting</option> - Use an existing volume group and reformat it. If you use this option, do not specify a <replaceable>partition</replaceable>. For example:
						</para>
<screen><command>volgroup rhel00 --useexisting --noformat</command></screen>
					</listitem>
					<listitem>
						<para>
							<option>--pesize=</option> - Set the size of the volume group's physical extents in KiB. The default value is 4096 (4 MiB), and the minimum value is 1024 (1 MiB).
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--reserved-space=</option> - Specify an amount of space to leave unused in a volume group in MiB. Applicable only to newly created volume groups.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--reserved-percent=</option> - Specify a percentage of total volume group space to leave unused. Applicable only to newly created volume groups.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					Create the partition first, then create the logical volume group, and then create the logical volume. For example:
				</para>
<screen>
<command>part pv.01 --size 10000</command>
<command>volgroup volgrp pv.01 </command>
<command>logvol / --vgname=volgrp --size=2000 --name=root</command>
</screen>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>xconfig</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>xconfig</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Configures the <application>X Window System</application>. If you install the <application>X Window System</application> with a Kickstart file that does not include the <command>xconfig</command> command, you must provide the <application>X</application> configuration manually during installation.
				</para>
				<para>
					Do not use this command in a Kickstart file that does not install the <application>X Window System</application>.
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<option>--defaultdesktop=</option> - Specify either <literal>GNOME</literal> or <literal>KDE</literal> to set the default desktop (assumes that the chosen environment, either the <application>GNOME Desktop Environment</application> or the <application>KDE Desktop Environment</application>, has been installed in the <command>%packages</command> section).
						</para>
						<important>
							<para>
								It is currently not possible to specify <application>KDE</application> as your default desktop environment using this option. This is a known issue. See <ulink url="https://access.redhat.com/solutions/1125833"/> for a workaround. The workaround can be used as a Kickstart post-installation script as described in <xref linkend="sect-kickstart-postinstall"/>.
							</para>
						</important>
					</listitem>
					<listitem>
						<para>
							<option>--startxonboot</option> - Use a graphical login on the installed system.
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry id="sect-kickstart-commands-zerombr">
			<term>
				<command>zerombr</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>zerombr</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					If <command>zerombr</command> is specified, any invalid partition tables found on disks are initialized. This destroys all of the contents of disks with invalid partition tables. This command is required when performing an unattended installation on a system with previously initialized disks.
				</para>
				<warning>
					<para>
						On IBM System&nbsp;z, if <command>zerombr</command> is specified, any <firstterm>Direct Access Storage Device</firstterm> (DASD) visible to the installation program which is not already low-level formatted is automatically low-level formatted with <application>dasdfmt</application>. The command also prevents user choice during interactive installations.
					</para>
					<para>
						If <command>zerombr</command> is not specified and there is at least one unformatted DASD visible to the installation program, a non-interactive Kickstart installation exits unsuccessfully.
					</para>
					<para>
						If <command>zerombr</command> is not specified and there is at least one unformatted DASD visible to the installation program, an interactive installation exits if the user does not agree to format all visible and unformatted DASDs. To circumvent this, only activate those DASDs that you will use during installation. You can always add more DASDs after installation is complete.
					</para>
				</warning>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>zfcp</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>zfcp</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Define a Fibre channel device. This option only applies on IBM System&nbsp;z. All of the options described below must be specified.
				</para>
<screen><command>zfcp --devnum=<replaceable>devnum</replaceable> --wwpn=<replaceable>wwpn</replaceable> --fcplun=<replaceable>lun</replaceable></command></screen>
				<itemizedlist>
					<listitem>
						<para>
							<option>--devnum</option> - The device number (zFCP adapter device bus ID).
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--wwpn</option> - The device's World Wide Port Name (WWPN). Takes the form of a 16-digit number, preceded by <literal>0x</literal>.
						</para>
					</listitem>
					<listitem>
						<para>
							<option>--fcplun</option> - The device's Logical Unit Number (LUN). Takes the form of a 16-digit number, preceded by <literal>0x</literal>.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					For example:
				</para>
<screen><command>zfcp --devnum=0.0.4000 --wwpn=0x5005076300C213e9 --fcplun=0x5022000000000000</command></screen>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<command>%include</command> (optional)


				<indexterm>
					<primary>Kickstart file</primary>
					<secondary>include contents of another file</secondary>
				</indexterm>
				<indexterm>
					<primary>Kickstart file</primary>
					<secondary><command>%include</command></secondary>
				</indexterm>


			</term>
			<listitem>
				<para>
					Use the <command>%include <replaceable>/path/to/file</replaceable></command> command to include the contents of another file in the Kickstart file as though the contents were at the location of the <command>%include</command> command in the Kickstart file.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
</section>

<section id="sect-kickstart-packages">
	<title>Package Selection</title>


	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>package selection specification</secondary>
	</indexterm>


	<para>
		Use the <command>%packages</command> command to begin a Kickstart section which describes the software packages to be installed.
	</para>
	<para>
		You can specify packages by <firstterm>environment</firstterm>, <firstterm>group</firstterm>, or by their package names. Several environments and groups that contain related packages are defined. See the <filename>repodata/*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file on the &PRODUCT;&nbsp;7 Installation DVD for a list of environments and groups.
	</para>
	<para>
		The <filename>*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file contains a structure describing available environments (marked by the <literal>&lt;environment&gt;</literal> tag) and groups (the <literal>&lt;group&gt;</literal> tag). Each entry has an ID, user visibility value, name, description, and package list. If the group is selected for installation, the packages marked <literal>mandatory</literal> in the package list are always installed, the packages marked <literal>default</literal> are installed if they are not specifically excluded elsewhere, and the packages marked <literal>optional</literal> must be specifically included elsewhere even when the group is selected.
	</para>
	<para>
		You can specify a package group or environment using either its ID (the <literal>&lt;id&gt;</literal> tag) or name (the <literal>&lt;name&gt;</literal> tag).
	</para>
	<important>
		<para>
			If you are not sure what package should be installed, Red&nbsp;Hat recommends you to select the <guilabel>Minimal Install</guilabel> environment. <guilabel>Minimal install</guilabel> provides only the packages which are essential for running &PRODUCT;&nbsp;7. This will substantially reduce the chance of the system being affected by a vulnerability. If necessary, additional packages can be added later after the installation. For more details on <guilabel>Minimal install</guilabel>, see the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Installing_the_Minimum_Amount_of_Packages_Required.html">Installing the Minimum Amount of Packages Required</ulink> section of the Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Security Guide.
		</para>
	</important>
	<important>
		<para>
			To install a 32-bit package on a 64-bit system, append the package name with the 32-bit architecture for which the package was built; for example, <package>glibc.i686</package>. The <option>--multilib</option> option also must be specified in the Kickstart file; see the available options below.
		</para>
	</important>
	<important>
		<para>
			<application>Initial Setup</application> does not run after a system is installed from a Kickstart file unless a desktop environment and the <application>X Window System</application> were included in the installation and graphical login was enabled. This means that by default, no users except for <systemitem class="username">root</systemitem> are created. You can either create a user with the <option>user</option> option in the Kickstart file before installing additional systems from it (see <xref linkend="sect-kickstart-commands"/> for details) or log into the installed system with a virtual console as <systemitem class="username">root</systemitem> and add users with the <command>useradd</command> command.
		</para>
	</important>
	<para>
		The <command>%packages</command> section must end with the <command>%end</command> command.
	</para>
	<variablelist>
		<varlistentry>
			<term>Specifying an Environment</term>
			<listitem>
				<para>
					In addition to groups, you specify an entire environment to be installed:
				</para>
<screen>
<command>%packages</command>
@^Infrastructure Server
<command>%end</command>
</screen>
				<para>
					This command installs all packages which are part of the <guilabel>Infrastracture Server</guilabel> environment. All available environments are described in the <filename>repodata/*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file on the &PRODUCT;&nbsp;7 Installation DVD. Only a single environment can be specified in the Kickstart file.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Specifying Groups</term>
			<listitem>
				<para>
					Specify groups, one entry to a line, starting with an <literal>@</literal> symbol, and then the full group name or group id as given in the <filename>*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file. For example:
				</para>
<screen>
<command>%packages</command>
@X Window System
@Desktop
@Sound and Video
<command>%end</command>
</screen>
				<para>
					The <literal>Core</literal> group is always selected - it is not necessary to specify it in the <command>%packages</command> section.
				</para>
				<para>
					The <filename>*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file also defines groups called <literal>Conflicts (<replaceable>variant</replaceable>)</literal> for each variant of &PRODUCT;. This group contains all packages which are known to cause file conflicts, and is intended to be excluded.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Specifying Individual Packages</term>
			<listitem>
				<para>
					Specify individual packages by name, one entry to a line. You can use the asterisk character (<literal>*</literal>) as a <firstterm>wildcard</firstterm> in package names. For example:
				</para>
<screen>
<command>%packages</command>
sqlite
curl
aspell
docbook*
<command>%end</command>
</screen>
				<para>
					The <literal>docbook*</literal> entry includes the packages <package>docbook-dtds</package>, <package>docbook-simple</package>, <package>docbook-slides</package> and others that match the pattern represented with the wildcard.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Excluding Environments, Groups, or Packages</term>
			<listitem>
				<para>
					Use a leading dash (<literal>-</literal>) to specify packages or groups to exclude from the installation. For example:
				</para>
<screen>
<command>%packages</command>
-@Graphical Internet
-autofs
-ipa*fonts
<command>%end</command>
</screen>
			</listitem>
		</varlistentry>
	</variablelist>
	<important>
		<para>
			Installing all available packages using only <literal>*</literal> in a Kickstart file is not supported, even if you exclude the <literal>@Conflicts (<replaceable>variant</replaceable>)</literal> group.
		</para>
	</important>
	<para>
		You can change the default behavior of the <command>%packages</command> section by using several options. Some options work for the entire package selection, others are used with only specific groups.
	</para>
	<variablelist>
		<title>Common Package Selection Options</title>
		<para>
			The following options are available for the <command>%packages</command>. To use an option, append it to the start of the package selection section. For example:
		</para>
<screen><command>%packages --multilib --ignoremissing</command></screen>
		<varlistentry>
			<term>
				<option>--default</option>
			</term>
			<listitem>
				<para>
					Install the default set of packages. This corresponds to the package set which would be installed if no other selections were made in the <guilabel>Package Selection</guilabel> screen during an interactive installation.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--excludedocs</option>
			</term>
			<listitem>
				<para>
					Do not install any documentation contained within packages. In most cases, this excludes any files normally installed in the <filename class="directory">/usr/share/doc</filename> directory, but the specific files to be excluded depend on individual packages.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--ignoremissing</option>
			</term>
			<listitem>
				<para>
					Ignore any packages, groups and environments missing in the installation source, instead of halting the installation to ask if the installation should be aborted or continued.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--instLangs=</option>
			</term>
			<listitem>
				<para>
					Specify a list of languages to install. Note that this is different from package group level selections. This option does not describe which package groups should be installed; instead, it sets RPM macros controlling which translation files from individual packages should be installed.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--multilib</option>
			</term>
			<listitem>
				<para>
					Configure the installed system for multilib packages (that is, to allow installing 32-bit packages on a 64-bit system) and install packages specified in this section as such.
				</para>
				<para>
					Normally, on an AMD64 and Intel 64 system, only packages for this architecture (marked as <literal>x86_64</literal>) and packages for all architectures (marked as <literal>noarch</literal>) would be installed. When you use this option, packages for 32-bit AMD and Intel systems (marked as <literal>i686</literal>) are automatically installed as well, if available.
				</para>
				<para>
					This only applies to packages explicitly specified in the <command>%packages</command> section. Packages which are only being installed as dependencies without being specified in the Kickstart file are only installed in architecture versions in which they are needed, even if they are available for more architectures.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--nocore</option>
			</term>
			<listitem>
				<para>
					Disables installation of the <literal>@Core</literal> package group which is otherwise always installed by default. Disabling the <literal>@Core</literal> package group should be only used for creating lightweight containers; installing a desktop or server system with <option>--nocore</option> will result in an unusable system.
					<note>
						<para>
							Using <literal>-@Core</literal> to exclude packages in the <literal>@Core</literal> package group does not work. The only way to exclude the <literal>@Core</literal> package group is with the <option>--nocore</option> option.
						</para>
					</note>
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
	<variablelist>
		<title>Options for Specific Package Groups</title>
		<para>
			The options in this list only apply to a single package group. Instead of using them at the <command>%packages</command> command in the Kickstart file, append them to the group name. For example:
		</para>
<screen>
<command>%packages</command>
@Graphical Internet --optional
<command>%end</command>
</screen>
		<varlistentry>
			<term>
				<option>--nodefaults</option>
			</term>
			<listitem>
				<para>
					Only install the group's mandatory packages, not the default selections.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<option>--optional</option>
			</term>
			<listitem>
				<para>
					Install packages marked as optional in the group definition in the <filename>*-comps-<replaceable>variant</replaceable>.<replaceable>architecture</replaceable>.xml</filename> file, in addition to installing the default selections.
				</para>
				<para>
					Note that some package groups, such as <literal>Scientific Support</literal>, do not have any mandatory or default packages specified - only optional packages. In this case the <option>--optional</option> option must always be used, otherwise no packages from this group will be installed.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
</section>

<section id="sect-kickstart-preinstall">
	<title>Pre-installation Script</title>


	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>pre-installation configuration</secondary>
	</indexterm>
	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>%pre</secondary>
	</indexterm>

	<para>
		The <command>%pre</command> script is run on the system immediately after the Kickstart file has been parsed, but before installation begins. This section must be placed towards the end of the Kickstart file, after the Kickstart commands described in <xref linkend="sect-kickstart-commands"/>, and must start with <command>%pre</command> and end with <command>%end</command>. If your Kickstart file also includes a <command>%post</command> section, the order in which the <command>%pre</command> and <command>%post</command> sections are included does not matter.
	</para>

	<para>
		The <command>%pre</command> script can be used for activation and configuration of networking and storage devices. It is also possible to run scripts, using interpreters available in the installation environment. Adding a <command>%pre</command> script can be useful if you have networking and storage that needs special configuration before proceeding with the installation, or have a script that, for example, sets up additional logging parameters or environment variables. Debugging problems with <command>%pre</command> scripts can be difficult, so it is recommended only to use a <command>%pre</command> script when necessary.
	</para>

	<para>
		Commands related to networking, storage, and file systems are available to use in the <command>%pre</command> script, in addition to most of the utilities in the installation environment's <filename class="directory">/sbin</filename> and <filename class="directory">/bin</filename> directories.
	</para>

	<para>
		You can access the network in the <command>%pre</command> section. However, the <firstterm>name service</firstterm> has not been configured at this point, so only IP addresses work, not URLs.
	</para>
	<para>
		The pre-installation script section of Kickstart <emphasis>cannot</emphasis> manage multiple install trees or source media. This information must be included for each created Kickstart file, as the pre-installation script occurs during the second stage of the installation process.
	</para>
	<note>
		<para>
			Unlike the post-installation script, the pre-installation script is not run in the <systemitem>chroot</systemitem> environment.
		</para>
	</note>
	<para>
		The following options can be used to change the behavior of pre-installation scripts. To use an option, append it to the <command>%pre</command> line at the beginning of the script. For example:
	</para>
<screen>
<command>%pre --interpreter=/usr/bin/python</command>
--- Python script omitted --
<command>%end</command>
</screen>
	<variablelist>
		<varlistentry>
			<term><option>--interpreter=</option></term>
			<listitem>
				<para>
					Allows you to specify a different scripting language, such as Python. Any scripting language available on the system can be used; in most cases, these are <systemitem>/usr/bin/sh</systemitem>, <systemitem>/usr/bin/bash</systemitem>, and <systemitem>/usr/bin/python</systemitem>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>--erroronfail</option></term>
			<listitem>
				<para>
					Display an error and halt the installation if the script fails. The error message will direct you to where the cause of the failure is logged.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>--log=</option></term>
			<listitem>
				<para>
					Logs the script's output into the specified log file. For example:
				</para>
<screen><command>%pre --log=/mnt/sysimage/root/ks-pre.log</command></screen>
			</listitem>
		</varlistentry>
	</variablelist>
	<para>
		The following is an example <command>%pre</command> section:
	</para>
	<example id="exam-kickstart-pre-script">
		<title>Sample %pre Script</title>
<screen>
<command>%pre</command>
#!/bin/sh
hds=""
mymedia=""
for file in /proc/ide/h* do
mymedia=`cat $file/media`
if [ $mymedia == "disk" ] ; then
hds="$hds `basename $file`"
fi
done
set $hds
numhd=`echo $#`
drive1=`echo $hds | cut -d' ' -f1`
drive2=`echo $hds | cut -d' ' -f2`

#Write out partition scheme based on whether there are 1 or 2 hard drives
if [ $numhd == "2" ] ; then
#2 drives
echo "#partitioning scheme generated in %pre for 2 drives" &gt; /tmp/part-include
echo "clearpart --all" &gt;&gt; /tmp/part-include
echo "part /boot --fstype xfs --size 75 --ondisk hda" &gt;&gt; /tmp/part-include
echo "part / --fstype xfs --size 1 --grow --ondisk hda" &gt;&gt; /tmp/part-include
echo "part swap --recommended --ondisk $drive1" &gt;&gt; /tmp/part-include
echo "part /home --fstype xfs --size 1 --grow --ondisk hdb" &gt;&gt; /tmp/part-include
else
#1 drive
echo "#partitioning scheme generated in %pre for 1 drive" &gt; /tmp/part-include
echo "clearpart --all" &gt;&gt; /tmp/part-include
echo "part /boot --fstype xfs --size 75" &gt;&gt; /tmp/part-include
echo "part swap --recommended" &gt;&gt; /tmp/part-include
echo "part / --fstype xfs --size 2048" &gt;&gt; /tmp/part-include
echo "part /home --fstype xfs --size 2048 --grow" &gt;&gt; /tmp/part-include
fi
<command>%end</command>
</screen>
		<para>
			This script determines the number of hard drives in the system and writes a text file with a different partitioning scheme depending on whether it has one or two drives. Instead of having a set of partitioning commands in the Kickstart file, include the following line:
		</para>
<screen><command>%include /tmp/part-include</command></screen>
		<para>
			The partitioning commands selected in the script will be used.
		</para>
	</example>
</section>

<section id="sect-kickstart-anaconda-configuration">
	<title>Anaconda configuration</title>


	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>anaconda configuration</secondary>
	</indexterm>
	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>%anaconda</secondary>
	</indexterm>


	<para>
		Additional installation options can be configured in the <command>%anaconda</command> section of your Kickstart file. This section controls the behavior of the user interface of the installation system.
	</para>
	<para>
		This section must be placed towards the end of the Kickstart file, after the Kickstart commands described in  <xref linkend="sect-kickstart-commands"/>, and must start with <command>%anaconda</command> and end with <command>%end</command>.
	</para>
	<para>
		Currently, the only command that can be used in the <command>%anaconda</command> section is <command>pwpolicy</command>. See <xref linkend="sect-kickstart-commands"/> for more details.
	</para>
	<para>
		The following is an example <command>%anaconda</command> section:
	</para>
	<example id="exam-kickstart-anaconda-script">
		<title>Sample %anaconda Script</title>
<screen>
<command>%anaconda</command>
pwpolicy root --minlen=10 --strict
<command>%end</command>
</screen>
		<para>
			This example <command>%anaconda</command> section sets a password policy which requires that the root password be at least 10 characters long, and strictly forbids passwords which do not match this requirement.
		</para>
	</example>
</section>

<section id="sect-kickstart-postinstall">
	<title>Post-installation Script</title>


	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>post-installation configuration</secondary>
	</indexterm>
	<indexterm>
		<primary>Kickstart file</primary>
		<secondary>%post</secondary>
	</indexterm>


	<para>
		You have the option of adding commands to run on the system once the installation is complete, but before the system is rebooted for the first time. This section must be placed towards the end of the Kickstart file, after the Kickstart commands described in <xref linkend="sect-kickstart-commands"/>, and must start with <command>%post</command> and end with <command>%end</command>. If your Kickstart file also includes a <command>%pre</command> section, the order of the <command>%pre</command> and <command>%post</command> sections does not matter.
	</para>
	<para>
		This section is useful for functions such as installing additional software or configuring an additional name server. The post-install script is run in a chroot environment, therefore, performing tasks such as copying scripts or RPM packages from the installation media do not work by default. You can change this behavior using the <option>--nochroot</option> option as described below.
	</para>
	<para>
		Because post-install script runs in a chroot environment, most <command>systemctl</command> commands will refuse to perform any action. For more information, see the <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/sect-Managing_Services_with_systemd-Services.html#sect-behavior_of_systemctl_in_a_chroot_environment">"Behavior of systemctl in a chroot Environment" section</ulink> of System Administrator's Guide for Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7.
	</para>
	<important>
		<para>
			If you configured the network with static IP information, including a name server, you can access the network and resolve IP addresses in the <command>%post</command> section. If you configured the network for <systemitem>DHCP</systemitem>, the <filename>/etc/resolv.conf</filename> file has not been completed when the installation executes the <command>%post</command> section. You can access the network, but you cannot resolve IP addresses. Thus, if you are using <systemitem>DHCP</systemitem>, you must specify IP addresses in the <command>%post</command> section.
		</para>
	</important>
	<para>
		The following options can be used to change the behavior of post-installation scripts. To use an option, append it to the <command>%post</command> line at the beginning of the script. For example:
	</para>
<screen>
<command>%post --interpreter=/usr/bin/python</command>
--- Python script omitted --
<command>%end</command>
</screen>
	<variablelist>
		<varlistentry>
			<term><option>--interpreter=</option></term>
			<listitem>
				<para>
					Allows you to specify a different scripting language, such as Python. For example:
				</para>
<screen><command>%post --interpreter=/usr/bin/python</command></screen>
				<para>
					Any scripting language available on the system can be used; in most cases, these are <systemitem>/usr/bin/sh</systemitem>, <systemitem>/usr/bin/bash</systemitem>, and <systemitem>/usr/bin/python</systemitem>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>--nochroot</option></term>
			<listitem>
				<para>
					Allows you to specify commands that you would like to run outside of the chroot environment.
				</para>
				<para>
					The following example copies the file <filename>/etc/resolv.conf</filename> to the file system that was just installed.
				</para>
<screen>
<command>%post --nochroot</command>
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
<command>%end</command>
</screen>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>--erroronfail</option></term>
			<listitem>
				<para>
					Display an error and halt the installation if the script fails. The error message will direct you to where the cause of the failure is logged.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>--log=</option></term>
			<listitem>
				<para>
					Logs the script's output into the specified log file. Note that the path of the log file must take into account whether or not you use the <option>--nochroot</option> option. For example, without <option>--nochroot</option>:
				</para>
<screen><command>%post --log=/root/ks-post.log</command></screen>
				<para>
					with <option>--nochroot</option>:
				</para>
<screen><command>%post --nochroot --log=/mnt/sysimage/root/ks-post.log</command></screen>
			</listitem>
		</varlistentry>
	</variablelist>
	<para>
		The following is an example <command>%post</command> section:
	</para>
	<example id="exam-kickstart-post-script">
		<title>Sample %post Script</title>
<screen>
# Start of the %post section with logging into /root/ks-post.log
<command>%post --log=/root/ks-post.log</command>

# Mount an NFS share
mkdir /mnt/temp
mount -o nolock 10.10.0.2:/usr/new-machines /mnt/temp
openvt -s -w -- /mnt/temp/runme
umount /mnt/temp

# End of the %post section
<command>%end</command>
</screen>
		<para>
			The above example mounts an NFS share and executes a script named <filename>runme</filename> located at <filename>/usr/new-machines/</filename> on the share. Note that NFS file locking is <emphasis>not</emphasis> supported while in Kickstart mode, therefore the <option>-o nolock</option> option is required.
		</para>
	</example>
	<para>
		One of the most common uses of post-installation scripts in Kickstart installations is automatic registration of the installed system using Red&nbsp;Hat Subscription Manager. The following is an example of automatic subscription in a <command>%post</command> script:
	</para>
	<example id="exam-kickstart-entitlements">
		<title>Running subscription-manager as a Post-Install Script</title>


		<indexterm>
			<primary>Kickstart</primary>
			<secondary>subscriptions</secondary>
		</indexterm>
		<indexterm>
			<primary>registration</primary>
			<secondary>with Kickstart</secondary>
		</indexterm>
		<indexterm>
			<primary>subscription</primary>
			<secondary>with Kickstart</secondary>
		</indexterm>


<screen>
<command>%post --log=/root/ks-post.log</command>
/usr/sbin/subscription-manager register --username=admin@example.com --password=secret --serverurl=sam-server.example.com --org="Admin Group" --environment="Dev" --servicelevel=standard --release="7.0"
<command>%end</command>
</screen>
		<para>
			The <command>subscription-manager</command> command-line script registers a system to a Red&nbsp;Hat Subscription Management server (Customer Portal Subscription Management, Subscription Asset Manager, or CloudForms System Engine). This script can also be used to assign or attach subscriptions automatically to the system that best-match that system.
		</para>
		<para>
			When registering to the Customer Portal, use the Red&nbsp;Hat Network login credentials. When registering to Subscription Asset Manager or CloudForms System&nbsp;Engine, use a user account created by the local administrator.
		</para>
		<para>
			Additional options can be used with the registration command to set a preferred service level for the system and to restrict updates and errata to a specific operating system version.
		</para>
		<para>
			Also see the <ulink url="https://access.redhat.com/solutions/748313">How do I use subscription-manager in a kickstart file?</ulink> article on the Red&nbsp;Hat Customer Portal for additional information about using <command>subscription-manager</command> in a Kickstart <command>%post</command> section.
		</para>
	</example>
</section>

<section id="sect-kickstart-onerror">
	<title>Kickstart error handling</title>
	<para>
		Starting with &PRODUCT;&nbsp;7, Kickstart installations can contain custom scripts which are run when the installer encounters a fatal error - for example, an error in a package that has been requested for installation, failure to start VNC when specified, or an error when scanning storage devices. Installation cannot continue after such an error has occured. The installer will run all <command>%onerror</command> scripts in the order they are provided in the Kickstart file. In addition, <command>%onerror</command> scripts will be run in the event of a traceback.
	</para>
	<para>
		Each <command>%onerror</command> script is required to end with <command>%end</command>.
	</para>
	<variablelist>

		<varlistentry>
			<term><option>--erroronfail</option></term>
			<listitem>
				<para>
					Display an error and halt the installation if the script fails. The error message will direct you to where the cause of the failure is logged.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term><option>--interpreter=</option></term>
			<listitem>
				<para>
					Allows you to specify a different scripting language, such as Python. For example:
				</para>
<screen><command>%post --interpreter=/usr/bin/python</command></screen>
				<para>
					Any scripting language available on the system can be used; in most cases, these are <systemitem>/usr/bin/sh</systemitem>, <systemitem>/usr/bin/bash</systemitem>, and <systemitem>/usr/bin/python</systemitem>.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term><option>--log=</option></term>
			<listitem>
				<para>
					Logs the script's output into the specified log file.
				</para>
			</listitem>
		</varlistentry>

	</variablelist>
</section>

<section id="sect-kickstart-addon">
	<title>Kickstart Add-ons</title>
	<para>
		Starting with &PRODUCT;&nbsp;7, Kickstart installations support add-ons. These add-ons can expand the basic Kickstart (and Anaconda) functionality in many ways.
	</para>
	<para>
		To use an add-on in your Kickstart file, use the <command>%addon <replaceable>addon_name</replaceable> <replaceable>options</replaceable></command> command, and finish the command with an <command>%end</command> statement, similar to pre-installation and post-installation scripts described in previous sections. For example, if you want to use the <application>Kdump</application> add-on, which is distributed with <application>Anaconda</application> by default, use the following commands:
	</para>
<screen>
<command>%addon com_redhat_kdump --enable --reserve-mb=auto</command>
<command>%end</command>
</screen>
	<para>
		The <command>%addon</command> command does not include any options of its own - all options are dependent on the actual add-on. For more information about add-ons, see the <ulink url="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/anaconda_customization_guide/"><citetitle>Red&nbsp;Hat Enterprise&nbsp;Linux&nbsp;7 Anaconda Customization Guide</citetitle></ulink>.
	</para>
</section>
</section>
<section id="sect-kickstart-examples">
	<title>Sample Kickstart Configurations</title>

	<section id="sect-kickstart-partitioning-example">
		<title>Advanced Partitioning Example</title>


		<indexterm>
			<primary>Kickstart file</primary>
			<secondary>options</secondary>
			<tertiary>partitioning examples</tertiary>
		</indexterm>


		<para>
			The following is an integrated example showing the <command>clearpart</command>, <command>zerombr</command>, <command>part</command>, <command>raid</command>, <command>volgroup</command>, and <command>logvol</command> Kickstart options in action:
		</para>
		<example>
			<title>Advanced Partitioning Example</title>
<screen>
<command>clearpart  --drives=hda,hdc</command>
<command>zerombr</command>
# Raid 1 IDE config
<command>part raid.11 --size 1000  --asprimary --ondrive=hda</command>
<command>part raid.12 --size 1000  --asprimary --ondrive=hda</command>
<command>part raid.13 --size 2000  --asprimary --ondrive=hda</command>
<command>part raid.14 --size 8000              --ondrive=hda</command>
<command>part raid.15 --size 16384 --grow      --ondrive=hda</command>
<command>part raid.21 --size 1000  --asprimary --ondrive=hdc</command>
<command>part raid.22 --size 1000  --asprimary --ondrive=hdc</command>
<command>part raid.23 --size 2000  --asprimary --ondrive=hdc</command>
<command>part raid.24 --size 8000              --ondrive=hdc</command>
<command>part raid.25 --size 16384 --grow      --ondrive=hdc</command>

# You can add --spares=x
<command>raid /     --fstype xfs  --device root  --level=RAID1 raid.11 raid.21</command>
<command>raid /safe --fstype xfs  --device safe  --level=RAID1 raid.12 raid.22</command>
<command>raid swap  --fstype swap --device swap  --level=RAID1 raid.13 raid.23</command>
<command>raid /usr  --fstype xfs  --device usr 	 --level=RAID1 raid.14 raid.24</command>
<command>raid pv.01 --fstype xfs  --device pv.01 --level=RAID1 raid.15 raid.25</command>

# LVM configuration so that we can resize /var and /usr/local later
<command>volgroup sysvg pv.01</command>
<command>logvol /var           --vgname=sysvg --size=8000     --name=var</command>
<command>logvol /var/freespace --vgname=sysvg --size=8000     --name=freespacetouse</command>
<command>logvol /usr/local     --vgname=sysvg --size=1 --grow --name=usrlocal</command>
</screen>
			<para>
				This advanced example implements LVM over RAID, as well as the ability to resize various directories for future growth.
			</para>
			<para>
				First, the <command>clearpart</command> command is used on drives <systemitem>hda</systemitem> and <systemitem>hdc</systemitem> to wipe them. The <command>zerombr</command> command initializes unused partition tables.
			</para>
			<para>
				Then, the two drives are partitioned to prepare them for RAID configuration. Each drive is divided into five partitions, and each drive is partitioned into an identical layout.
			</para>
			<para>
				The next part uses these pairs of physical partitions to create a software RAID device with RAID1 level (mirroring). The first four RAID devices are used for <filename>/</filename> (root), <filename>/safe</filename>, <systemitem>swap</systemitem> and <filename>/usr</filename>. The fifth, largest pair of partitions is named <literal>pv.01</literal> and will be used in the following part as a physical volume for LVM.
			</para>
			<para>
				Finally, the last set of commands first creates a volume group named <literal>sysvg</literal> on the <literal>pv.01</literal> physical volume. Then, three logical volumes (<literal>/var</literal>, <literal>/var/freespace</literal> and <literal>/usr/local</literal>) are created and added to the <literal>sysvg</literal> volume group. The <literal>/var</literal> and <literal>/var/freespace</literal> volumes have a set size of 8 GB, and the <literal>/usr/local</literal> volume uses the <option>--grow</option> option to fill all remaining available space.
			</para>
		</example>
	</section>
	<section id="sect-kickstart-input-example">
		<title>User Input Example</title>

		<indexterm>
			<primary>Kickstart file</primary>
			<secondary>options</secondary>
			<tertiary>user input</tertiary>
		</indexterm>

		<para>
			The following is an example showing how to prompt the user for input, and then read that input and save it as a variable, using bash:
		</para>
		<example>
			<title>User Input Example</title>
<screen>
<command>exec &lt; /dev/tty6 &gt; /dev/tty6 2&gt; /dev/tty6</command>
<command>chvt 6</command>
<command>IFS=$'\n'</command>
<command>echo -n "Enter input: "</command>
<command>read USERINPUT</command>
<command>echo</command>
<command>echo -n "You entered:" "$USERINPUT"</command>
<command>echo</command>
<command>chvt 1</command>
<command>exec &lt; /dev/tty1 &gt; /dev/tty1 2&gt; /dev/tty1</command>
</screen>
			<para>
				Due to the way Kickstart operates, the script must switch to a new virtual terminal before reading input from the user. This is accomplished by the <command>exec &lt; /dev/tty6 &gt; /dev/tty6 2&gt; /dev/tty6</command> and <command>chvt 6</command> commands. The <command>read USERINPUT</command> reads input from the user until enter is pressed, and stores it in the variable <literal>USERINPUT</literal>. The <command>echo -n "You entered:" "$USERINPUT"</command> command displays the text <literal>You entered:</literal> followed by the user's input. Finally, the <command>chvt 1</command> and <command>exec &lt; /dev/tty1 &gt; /dev/tty1 2&gt; /dev/tty1</command> commands switch back to the original terminal and allow Kickstart to continue installation.
			</para>
		</example>
	</section>
	<section id="sect-kickstart-service-example">
		<title>Example Kickstart file for installing and starting the RNG daemon</title>
		<para>
			The following is an example Kickstart file which demonstrates how to install and enable a service, in this case the Random Number Generator (RNG) daemon, which supplies entropy to the system kernel:
		</para>
		<example>
			<title>Example Kickstart file for installing and starting the RNG daemon</title>
<screen>
<command>services --enabled=rngd</command>

<command>%packages</command>
<command>rng-tools</command>
<command>%end</command>
</screen>
			<para>
				The <command>services --enabled=rngd</command> command instructs the installed system to start the RNG daemon each time the system starts. The <package>rng-tools</package> package, which contains the RNG daemon, is then designated for installation.
			</para>
		</example>
	</section>
</section>
</chapter>
